
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.awt.font.NumericShaper$Range ///

public enum NumericShaper_Range: Int, JNIObjectProtocol, JNIObjectInit {

    case EUROPEAN, ARABIC, EASTERN_ARABIC, DEVANAGARI, BENGALI, GURMUKHI, GUJARATI, ORIYA, TAMIL, TELUGU, KANNADA, MALAYALAM, THAI, LAO, TIBETAN, MYANMAR, ETHIOPIC, KHMER, MONGOLIAN, NKO, MYANMAR_SHAN, LIMBU, NEW_TAI_LUE, BALINESE, SUNDANESE, LEPCHA, OL_CHIKI, VAI, SAURASHTRA, KAYAH_LI, CHAM, TAI_THAM_HORA, TAI_THAM_THAM, JAVANESE, MEETEI_MAYEK

    static let enumConstants = JavaClass(loading: "java.awt.font.NumericShaper$Range")
        .getEnumConstants()!.map { NumericShaper_RangeForward( javaObject: $0.javaObject ) }

    public func underlier() -> NumericShaper_RangeForward {
        return NumericShaper_Range.enumConstants[self.rawValue]
    }

    public func localJavaObject(_ locals: UnsafeMutablePointer<[jobject]>) -> jobject? {
        return underlier().localJavaObject( locals )
    }

    public init( javaObject: jobject? ) {
        self = NumericShaper_Range( rawValue: JavaEnum( javaObject: javaObject ).ordinal() )!
    }

    /// static boolean java.awt.font.NumericShaper$Range.access$100(java.awt.font.NumericShaper$Range,int)

    // Skipping method: true false false false false 

    /// static int java.awt.font.NumericShaper$Range.access$200(java.awt.font.NumericShaper$Range)

    // Skipping method: true false false false false 

    /// static int java.awt.font.NumericShaper$Range.access$300(java.awt.font.NumericShaper$Range)

    // Skipping method: true false false false false 

    /// static int java.awt.font.NumericShaper$Range.access$400(java.awt.font.NumericShaper$Range)

    // Skipping method: true false false false false 

    /// static int java.awt.font.NumericShaper$Range.access$500(java.awt.font.NumericShaper$Range)

    // Skipping method: true false false false false 

    /// static java.util.Set java.awt.font.NumericShaper$Range.access$600(int)

    // Skipping method: true false false false false 

    /// static int java.awt.font.NumericShaper$Range.access$700(java.awt.font.NumericShaper$Range)

    // Skipping method: true false false false false 

    /// static java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.access$800(int)

    // Skipping method: true false false false false 

    /// static int java.awt.font.NumericShaper$Range.access$900(java.util.Set)

    // Skipping method: true false false false false 

    /// private static java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.indexToRange(int)

    /// private static java.util.Set java.awt.font.NumericShaper$Range.maskToRangeSet(int)

    /// private static int java.awt.font.NumericShaper$Range.toRangeIndex(java.awt.font.NumericShaper$Range)

    /// private static int java.awt.font.NumericShaper$Range.toRangeMask(java.util.Set)

    /// public static java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.valueOf(java.lang.String)

    private static var valueOf_MethodID_1: jmethodID?

    public static func valueOf( name: String? ) -> NumericShaper_Range! {
        return NumericShaper_RangeForward.valueOf( name: name )
    }
    public static func valueOf( _ _name: String? ) -> NumericShaper_Range! {
        return valueOf( name: _name )
    }

    /// public static java.awt.font.NumericShaper$Range[] java.awt.font.NumericShaper$Range.values()

    private static var values_MethodID_2: jmethodID?

    public static func values() -> [NumericShaper_Range]! {
        return NumericShaper_RangeForward.values( )
    }

    /// private int java.awt.font.NumericShaper$Range.getDigitBase()

    /// char java.awt.font.NumericShaper$Range.getNumericBase()

    // Skipping method: true false false false false 

    /// private boolean java.awt.font.NumericShaper$Range.inRange(int)

}


open class NumericShaper_RangeForward: JNIObjectForward {

    private static var NumericShaper_RangeJNIClass: jclass?

    /// private static final java.awt.font.NumericShaper$Range[] java.awt.font.NumericShaper$Range.$VALUES

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.ARABIC

    private static var ARABIC_FieldID: jfieldID?

    open static var ARABIC: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "ARABIC", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &ARABIC_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.BALINESE

    private static var BALINESE_FieldID: jfieldID?

    open static var BALINESE: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "BALINESE", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &BALINESE_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.BENGALI

    private static var BENGALI_FieldID: jfieldID?

    open static var BENGALI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "BENGALI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &BENGALI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.CHAM

    private static var CHAM_FieldID: jfieldID?

    open static var CHAM: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "CHAM", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &CHAM_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.DEVANAGARI

    private static var DEVANAGARI_FieldID: jfieldID?

    open static var DEVANAGARI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "DEVANAGARI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &DEVANAGARI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.EASTERN_ARABIC

    private static var EASTERN_ARABIC_FieldID: jfieldID?

    open static var EASTERN_ARABIC: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "EASTERN_ARABIC", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &EASTERN_ARABIC_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.ETHIOPIC

    private static var ETHIOPIC_FieldID: jfieldID?

    open static var ETHIOPIC: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "ETHIOPIC", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &ETHIOPIC_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.EUROPEAN

    private static var EUROPEAN_FieldID: jfieldID?

    open static var EUROPEAN: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "EUROPEAN", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &EUROPEAN_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.GUJARATI

    private static var GUJARATI_FieldID: jfieldID?

    open static var GUJARATI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "GUJARATI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &GUJARATI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.GURMUKHI

    private static var GURMUKHI_FieldID: jfieldID?

    open static var GURMUKHI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "GURMUKHI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &GURMUKHI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.JAVANESE

    private static var JAVANESE_FieldID: jfieldID?

    open static var JAVANESE: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "JAVANESE", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &JAVANESE_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.KANNADA

    private static var KANNADA_FieldID: jfieldID?

    open static var KANNADA: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "KANNADA", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &KANNADA_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.KAYAH_LI

    private static var KAYAH_LI_FieldID: jfieldID?

    open static var KAYAH_LI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "KAYAH_LI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &KAYAH_LI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.KHMER

    private static var KHMER_FieldID: jfieldID?

    open static var KHMER: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "KHMER", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &KHMER_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.LAO

    private static var LAO_FieldID: jfieldID?

    open static var LAO: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "LAO", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &LAO_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.LEPCHA

    private static var LEPCHA_FieldID: jfieldID?

    open static var LEPCHA: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "LEPCHA", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &LEPCHA_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.LIMBU

    private static var LIMBU_FieldID: jfieldID?

    open static var LIMBU: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "LIMBU", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &LIMBU_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.MALAYALAM

    private static var MALAYALAM_FieldID: jfieldID?

    open static var MALAYALAM: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MALAYALAM", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &MALAYALAM_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.MEETEI_MAYEK

    private static var MEETEI_MAYEK_FieldID: jfieldID?

    open static var MEETEI_MAYEK: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MEETEI_MAYEK", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &MEETEI_MAYEK_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.MONGOLIAN

    private static var MONGOLIAN_FieldID: jfieldID?

    open static var MONGOLIAN: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MONGOLIAN", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &MONGOLIAN_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.MYANMAR

    private static var MYANMAR_FieldID: jfieldID?

    open static var MYANMAR: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MYANMAR", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &MYANMAR_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.MYANMAR_SHAN

    private static var MYANMAR_SHAN_FieldID: jfieldID?

    open static var MYANMAR_SHAN: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MYANMAR_SHAN", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &MYANMAR_SHAN_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.NEW_TAI_LUE

    private static var NEW_TAI_LUE_FieldID: jfieldID?

    open static var NEW_TAI_LUE: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "NEW_TAI_LUE", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &NEW_TAI_LUE_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.NKO

    private static var NKO_FieldID: jfieldID?

    open static var NKO: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "NKO", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &NKO_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.OL_CHIKI

    private static var OL_CHIKI_FieldID: jfieldID?

    open static var OL_CHIKI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "OL_CHIKI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &OL_CHIKI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.ORIYA

    private static var ORIYA_FieldID: jfieldID?

    open static var ORIYA: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "ORIYA", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &ORIYA_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.SAURASHTRA

    private static var SAURASHTRA_FieldID: jfieldID?

    open static var SAURASHTRA: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "SAURASHTRA", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &SAURASHTRA_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.SUNDANESE

    private static var SUNDANESE_FieldID: jfieldID?

    open static var SUNDANESE: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "SUNDANESE", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &SUNDANESE_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.TAI_THAM_HORA

    private static var TAI_THAM_HORA_FieldID: jfieldID?

    open static var TAI_THAM_HORA: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "TAI_THAM_HORA", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &TAI_THAM_HORA_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.TAI_THAM_THAM

    private static var TAI_THAM_THAM_FieldID: jfieldID?

    open static var TAI_THAM_THAM: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "TAI_THAM_THAM", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &TAI_THAM_THAM_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.TAMIL

    private static var TAMIL_FieldID: jfieldID?

    open static var TAMIL: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "TAMIL", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &TAMIL_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.TELUGU

    private static var TELUGU_FieldID: jfieldID?

    open static var TELUGU: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "TELUGU", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &TELUGU_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.THAI

    private static var THAI_FieldID: jfieldID?

    open static var THAI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "THAI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &THAI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.TIBETAN

    private static var TIBETAN_FieldID: jfieldID?

    open static var TIBETAN: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "TIBETAN", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &TIBETAN_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.VAI

    private static var VAI_FieldID: jfieldID?

    open static var VAI: NumericShaper_Range! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "VAI", fieldType: "Ljava/awt/font/NumericShaper$Range;", fieldCache: &VAI_FieldID, className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass )
            defer { JNI.DeleteLocalRef( __value ) }
            return __value != nil ? NumericShaper_Range( javaObject: __value ) : nil
        }
    }

    /// private final int java.awt.font.NumericShaper$Range.base

    /// private final int java.awt.font.NumericShaper$Range.end

    /// private final int java.awt.font.NumericShaper$Range.start

    /// public static java.awt.font.NumericShaper$Range java.awt.font.NumericShaper$Range.valueOf(java.lang.String)

    private static var valueOf_MethodID_3: jmethodID?

    open class func valueOf( name: String? ) -> NumericShaper_Range! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        __args[0] = JNIType.toJava( value: name, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass, methodName: "valueOf", methodSig: "(Ljava/lang/String;)Ljava/awt/font/NumericShaper$Range;", methodCache: &valueOf_MethodID_3, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? NumericShaper_Range( javaObject: __return ) : nil
    }

    open class func valueOf( _ _name: String? ) -> NumericShaper_Range! {
        return valueOf( name: _name )
    }

    /// public static java.lang.Enum java.lang.Enum.valueOf(java.lang.Class,java.lang.String)

    private static var valueOf_MethodID_4: jmethodID?

    open class func valueOf( enumType: java_swift.JavaClass?, name: String? ) -> java_swift.JavaEnum! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        __args[0] = JNIType.toJava( value: enumType, locals: &__locals )
        __args[1] = JNIType.toJava( value: name, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass, methodName: "valueOf", methodSig: "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;", methodCache: &valueOf_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_swift.JavaEnum( javaObject: __return ) : nil
    }

    open class func valueOf( _ _enumType: java_swift.JavaClass?, _ _name: String? ) -> java_swift.JavaEnum! {
        return valueOf( enumType: _enumType, name: _name )
    }

    /// public static java.awt.font.NumericShaper$Range[] java.awt.font.NumericShaper$Range.values()

    private static var values_MethodID_5: jmethodID?

    open class func values() -> [NumericShaper_Range]! {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/font/NumericShaper$Range", classCache: &NumericShaper_RangeJNIClass, methodName: "values", methodSig: "()[Ljava/awt/font/NumericShaper$Range;", methodCache: &values_MethodID_5, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: [NumericShaper_Range].self, from: __return )
    }


    /// public final int java.lang.Enum.compareTo(java.lang.Enum)

    // Skipping method: false true false false false 

    /// public int java.lang.Enum.compareTo(java.lang.Object)

    // Skipping method: false true false false false 

    /// public final boolean java.lang.Enum.equals(java.lang.Object)

    // Skipping method: false true false false false 

    /// public final native java.lang.Class java.lang.Object.getClass()

    // Skipping method: false true false false false 

    /// public final java.lang.Class java.lang.Enum.getDeclaringClass()

    // Skipping method: false true false false false 

    /// public final int java.lang.Enum.hashCode()

    // Skipping method: false true false false false 

    /// public final java.lang.String java.lang.Enum.name()

    // Skipping method: false true false false false 

    /// public final native void java.lang.Object.notify()

    // Skipping method: false true false false false 

    /// public final native void java.lang.Object.notifyAll()

    // Skipping method: false true false false false 

    /// public final int java.lang.Enum.ordinal()

    // Skipping method: false true false false false 

    /// public java.lang.String java.lang.Enum.toString()

    // Skipping method: false true false false false 

    /// public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException

    // Skipping method: false true false false false 

    /// public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException

    // Skipping method: false true false false false 

    /// public final void java.lang.Object.wait() throws java.lang.InterruptedException

    // Skipping method: false true false false false 

}

