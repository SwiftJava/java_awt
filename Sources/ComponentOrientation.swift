
import java_swift
import java_util

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.awt.ComponentOrientation ///

open class ComponentOrientation: java_swift.JavaObject, /* java.io.Serializable */ UnclassedProtocol {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var ComponentOrientationJNIClass: jclass?

    /// private static final long java.awt.ComponentOrientation.serialVersionUID

    /// private static final int java.awt.ComponentOrientation.UNK_BIT

    /// private static final int java.awt.ComponentOrientation.HORIZ_BIT

    /// private static final int java.awt.ComponentOrientation.LTR_BIT

    /// public static final java.awt.ComponentOrientation java.awt.ComponentOrientation.LEFT_TO_RIGHT

    private static var LEFT_TO_RIGHT_FieldID: jfieldID?

    open static var LEFT_TO_RIGHT: ComponentOrientation! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "LEFT_TO_RIGHT", fieldType: "Ljava/awt/ComponentOrientation;", fieldCache: &LEFT_TO_RIGHT_FieldID, className: "java/awt/ComponentOrientation", classCache: &ComponentOrientationJNIClass )
            return __value != nil ? ComponentOrientation( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.ComponentOrientation java.awt.ComponentOrientation.RIGHT_TO_LEFT

    private static var RIGHT_TO_LEFT_FieldID: jfieldID?

    open static var RIGHT_TO_LEFT: ComponentOrientation! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "RIGHT_TO_LEFT", fieldType: "Ljava/awt/ComponentOrientation;", fieldCache: &RIGHT_TO_LEFT_FieldID, className: "java/awt/ComponentOrientation", classCache: &ComponentOrientationJNIClass )
            return __value != nil ? ComponentOrientation( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.ComponentOrientation java.awt.ComponentOrientation.UNKNOWN

    private static var UNKNOWN_FieldID: jfieldID?

    open static var UNKNOWN: ComponentOrientation! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "UNKNOWN", fieldType: "Ljava/awt/ComponentOrientation;", fieldCache: &UNKNOWN_FieldID, className: "java/awt/ComponentOrientation", classCache: &ComponentOrientationJNIClass )
            return __value != nil ? ComponentOrientation( javaObject: __value ) : nil
        }
    }

    /// private int java.awt.ComponentOrientation.orientation

    /// private java.awt.ComponentOrientation(int)

    /// public boolean java.awt.ComponentOrientation.isLeftToRight()

    private static var isLeftToRight_MethodID_1: jmethodID?

    open func isLeftToRight() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isLeftToRight", methodSig: "()Z", methodCache: &ComponentOrientation.isLeftToRight_MethodID_1, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Bool(), from: __return )
    }


    /// public boolean java.awt.ComponentOrientation.isHorizontal()

    private static var isHorizontal_MethodID_2: jmethodID?

    open func isHorizontal() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isHorizontal", methodSig: "()Z", methodCache: &ComponentOrientation.isHorizontal_MethodID_2, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Bool(), from: __return )
    }


    /// public static java.awt.ComponentOrientation java.awt.ComponentOrientation.getOrientation(java.util.Locale)

    private static var getOrientation_MethodID_3: jmethodID?

    open class func getOrientation( locale: java_util.JavaLocale? ) -> ComponentOrientation! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: locale, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/ComponentOrientation", classCache: &ComponentOrientationJNIClass, methodName: "getOrientation", methodSig: "(Ljava/util/Locale;)Ljava/awt/ComponentOrientation;", methodCache: &getOrientation_MethodID_3, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? ComponentOrientation( javaObject: __return ) : nil
    }

    open class func getOrientation( _ _locale: java_util.JavaLocale? ) -> ComponentOrientation! {
        return getOrientation( locale: _locale )
    }

    /// public static java.awt.ComponentOrientation java.awt.ComponentOrientation.getOrientation(java.util.ResourceBundle)

    private static var getOrientation_MethodID_4: jmethodID?

    open class func getOrientation( bdl: java_util.ResourceBundle? ) -> ComponentOrientation! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: bdl, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/ComponentOrientation", classCache: &ComponentOrientationJNIClass, methodName: "getOrientation", methodSig: "(Ljava/util/ResourceBundle;)Ljava/awt/ComponentOrientation;", methodCache: &getOrientation_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? ComponentOrientation( javaObject: __return ) : nil
    }

    open class func getOrientation( _ _bdl: java_util.ResourceBundle? ) -> ComponentOrientation! {
        return getOrientation( bdl: _bdl )
    }

}

