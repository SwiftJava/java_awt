
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:21 GMT 2016 ///

/// class java.awt.CheckboxMenuItem ///

open class CheckboxMenuItem: MenuItem, ItemSelectable {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.CheckboxMenuItem", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var CheckboxMenuItemJNIClass: jclass?

    /// boolean java.awt.CheckboxMenuItem.state

    /// transient java.awt.event.ItemListener java.awt.CheckboxMenuItem.itemListener

    /// private static final java.lang.String java.awt.CheckboxMenuItem.base

    /// private static int java.awt.CheckboxMenuItem.nameCounter

    /// private static final long java.awt.CheckboxMenuItem.serialVersionUID

    /// private int java.awt.CheckboxMenuItem.checkboxMenuItemSerializedDataVersion

    /// boolean java.awt.MenuItem.enabled

    /// java.lang.String java.awt.MenuItem.label

    /// java.lang.String java.awt.MenuItem.actionCommand

    /// long java.awt.MenuItem.eventMask

    /// transient java.awt.event.ActionListener java.awt.MenuItem.actionListener

    /// private java.awt.MenuShortcut java.awt.MenuItem.shortcut

    /// private static final java.lang.String java.awt.MenuItem.base

    /// private static int java.awt.MenuItem.nameCounter

    /// private static final long java.awt.MenuItem.serialVersionUID

    /// private int java.awt.MenuItem.menuItemSerializedDataVersion

    /// transient java.awt.peer.MenuComponentPeer java.awt.MenuComponent.peer

    /// transient java.awt.MenuContainer java.awt.MenuComponent.parent

    /// transient sun.awt.AppContext java.awt.MenuComponent.appContext

    /// java.awt.Font java.awt.MenuComponent.font

    /// private java.lang.String java.awt.MenuComponent.name

    /// private boolean java.awt.MenuComponent.nameExplicitlySet

    /// boolean java.awt.MenuComponent.newEventsOnly

    /// private transient volatile java.security.AccessControlContext java.awt.MenuComponent.acc

    /// static final java.lang.String java.awt.MenuComponent.actionListenerK

    /// static final java.lang.String java.awt.MenuComponent.itemListenerK

    /// private static final long java.awt.MenuComponent.serialVersionUID

    /// private transient java.lang.Object java.awt.MenuComponent.privateKey

    /// javax.accessibility.AccessibleContext java.awt.MenuComponent.accessibleContext

    /// public java.awt.CheckboxMenuItem() throws java.awt.HeadlessException

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/CheckboxMenuItem", classCache: &CheckboxMenuItem.CheckboxMenuItemJNIClass, methodSig: "()V", methodCache: &CheckboxMenuItem.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public java.awt.CheckboxMenuItem(java.lang.String) throws java.awt.HeadlessException

    private static var new_MethodID_2: jmethodID?

    public convenience init( arg0: String? ) throws {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/CheckboxMenuItem", classCache: &CheckboxMenuItem.CheckboxMenuItemJNIClass, methodSig: "(Ljava/lang/String;)V", methodCache: &CheckboxMenuItem.new_MethodID_2, args: &__args, locals: &__locals )
        if let throwable = JNI.ExceptionCheck() {
            throw HeadlessException( javaObject: throwable )
        }
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: String? ) throws {
        try self.init( arg0: _arg0 )
    }

    /// public java.awt.CheckboxMenuItem(java.lang.String,boolean) throws java.awt.HeadlessException

    private static var new_MethodID_3: jmethodID?

    public convenience init( arg0: String?, arg1: Bool ) throws {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/CheckboxMenuItem", classCache: &CheckboxMenuItem.CheckboxMenuItemJNIClass, methodSig: "(Ljava/lang/String;Z)V", methodCache: &CheckboxMenuItem.new_MethodID_3, args: &__args, locals: &__locals )
        if let throwable = JNI.ExceptionCheck() {
            throw HeadlessException( javaObject: throwable )
        }
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: String?, _ _arg1: Bool ) throws {
        try self.init( arg0: _arg0, arg1: _arg1 )
    }

    /// private void java.awt.CheckboxMenuItem.writeObject(java.io.ObjectOutputStream) throws java.io.IOException

    /// public boolean java.awt.CheckboxMenuItem.getState()

    private static var getState_MethodID_4: jmethodID?

    open func getState() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "getState", methodSig: "()Z", methodCache: &CheckboxMenuItem.getState_MethodID_4, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }


    /// private void java.awt.CheckboxMenuItem.readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException,java.io.IOException

    /// private static void java.awt.CheckboxMenuItem.initIDs()

    /// public synchronized void java.awt.CheckboxMenuItem.setState(boolean)

    private static var setState_MethodID_5: jmethodID?

    open func setState( arg0: Bool ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setState", methodSig: "(Z)V", methodCache: &CheckboxMenuItem.setState_MethodID_5, args: &__args, locals: &__locals )
    }

    open func setState( _ _arg0: Bool ) {
        setState( arg0: _arg0 )
    }

    /// public java.util.EventListener[] java.awt.CheckboxMenuItem.getListeners(java.lang.Class)

    /// public void java.awt.CheckboxMenuItem.addNotify()

    /// public java.lang.String java.awt.CheckboxMenuItem.paramString()

    /// public javax.accessibility.AccessibleContext java.awt.CheckboxMenuItem.getAccessibleContext()

    /// boolean java.awt.CheckboxMenuItem.eventEnabled(java.awt.AWTEvent)

    /// protected void java.awt.CheckboxMenuItem.processEvent(java.awt.AWTEvent)

    private static var processEvent_MethodID_6: jmethodID?

    override open func processEvent( arg0: AWTEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "processEvent", methodSig: "(Ljava/awt/AWTEvent;)V", methodCache: &CheckboxMenuItem.processEvent_MethodID_6, args: &__args, locals: &__locals )
    }

    override open func processEvent( _ _arg0: AWTEvent? ) {
        processEvent( arg0: _arg0 )
    }

    /// java.lang.String java.awt.CheckboxMenuItem.constructComponentName()

    /// void java.awt.CheckboxMenuItem.doMenuEvent(long,int)

    /// public synchronized void java.awt.CheckboxMenuItem.addItemListener(java.awt.event.ItemListener)

    private static var addItemListener_MethodID_7: jmethodID?

    open func addItemListener( arg0: ItemListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "addItemListener", methodSig: "(Ljava/awt/event/ItemListener;)V", methodCache: &CheckboxMenuItem.addItemListener_MethodID_7, args: &__args, locals: &__locals )
    }

    open func addItemListener( _ _arg0: ItemListener? ) {
        addItemListener( arg0: _arg0 )
    }

    /// public synchronized java.lang.Object[] java.awt.CheckboxMenuItem.getSelectedObjects()

    private static var getSelectedObjects_MethodID_8: jmethodID?

    open func getSelectedObjects() -> [JavaObject]! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getSelectedObjects", methodSig: "()[Ljava/lang/Object;", methodCache: &CheckboxMenuItem.getSelectedObjects_MethodID_8, args: &__args, locals: &__locals )
        return JNIType.decode( type: [JavaObject](), from: __return )
    }


    /// public synchronized void java.awt.CheckboxMenuItem.removeItemListener(java.awt.event.ItemListener)

    private static var removeItemListener_MethodID_9: jmethodID?

    open func removeItemListener( arg0: ItemListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "removeItemListener", methodSig: "(Ljava/awt/event/ItemListener;)V", methodCache: &CheckboxMenuItem.removeItemListener_MethodID_9, args: &__args, locals: &__locals )
    }

    open func removeItemListener( _ _arg0: ItemListener? ) {
        removeItemListener( arg0: _arg0 )
    }

    /// public synchronized java.awt.event.ItemListener[] java.awt.CheckboxMenuItem.getItemListeners()

    private static var getItemListeners_MethodID_10: jmethodID?

    open func getItemListeners() -> [ItemListener]! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getItemListeners", methodSig: "()[Ljava/awt/event/ItemListener;", methodCache: &CheckboxMenuItem.getItemListeners_MethodID_10, args: &__args, locals: &__locals )
        return JNIType.decode( type: [ItemListenerForward](), from: __return )
    }


    /// protected void java.awt.CheckboxMenuItem.processItemEvent(java.awt.event.ItemEvent)

    private static var processItemEvent_MethodID_11: jmethodID?

    open func processItemEvent( arg0: ItemEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "processItemEvent", methodSig: "(Ljava/awt/event/ItemEvent;)V", methodCache: &CheckboxMenuItem.processItemEvent_MethodID_11, args: &__args, locals: &__locals )
    }

    open func processItemEvent( _ _arg0: ItemEvent? ) {
        processItemEvent( arg0: _arg0 )
    }

    /// In declared protocol but not defined.. ///

    /// public abstract javax.accessibility.AccessibleContext javax.accessibility.Accessible.getAccessibleContext()

}
