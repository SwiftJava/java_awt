
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:34:49 GMT 2016 ///

/// class java.awt.GraphicsConfigTemplate ///

open class GraphicsConfigTemplate: java_lang.JavaObject, /* java.io.Serializable */ UnclassedProtocol {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.GraphicsConfigTemplate", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var GraphicsConfigTemplateJNIClass: jclass?

    /// private static final long java.awt.GraphicsConfigTemplate.serialVersionUID

    /// public static final int java.awt.GraphicsConfigTemplate.REQUIRED

    private static var REQUIRED_FieldID: jfieldID?

    open static var REQUIRED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "REQUIRED", fieldType: "I", fieldCache: &REQUIRED_FieldID, className: "java/awt/GraphicsConfigTemplate", classCache: &GraphicsConfigTemplateJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.GraphicsConfigTemplate.PREFERRED

    private static var PREFERRED_FieldID: jfieldID?

    open static var PREFERRED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "PREFERRED", fieldType: "I", fieldCache: &PREFERRED_FieldID, className: "java/awt/GraphicsConfigTemplate", classCache: &GraphicsConfigTemplateJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.GraphicsConfigTemplate.UNNECESSARY

    private static var UNNECESSARY_FieldID: jfieldID?

    open static var UNNECESSARY: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "UNNECESSARY", fieldType: "I", fieldCache: &UNNECESSARY_FieldID, className: "java/awt/GraphicsConfigTemplate", classCache: &GraphicsConfigTemplateJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public java.awt.GraphicsConfigTemplate()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/GraphicsConfigTemplate", classCache: &GraphicsConfigTemplate.GraphicsConfigTemplateJNIClass, methodSig: "()V", methodCache: &GraphicsConfigTemplate.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public abstract java.awt.GraphicsConfiguration java.awt.GraphicsConfigTemplate.getBestConfiguration(java.awt.GraphicsConfiguration[])

    private static var getBestConfiguration_MethodID_2: jmethodID?

    open func getBestConfiguration( arg0: [GraphicsConfiguration]? ) -> GraphicsConfiguration! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getBestConfiguration", methodSig: "([Ljava/awt/GraphicsConfiguration;)Ljava/awt/GraphicsConfiguration;", methodCache: &GraphicsConfigTemplate.getBestConfiguration_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? GraphicsConfiguration( javaObject: __return ) : nil
    }

    open func getBestConfiguration( _ _arg0: [GraphicsConfiguration]? ) -> GraphicsConfiguration! {
        return getBestConfiguration( arg0: _arg0 )
    }

    /// public abstract boolean java.awt.GraphicsConfigTemplate.isGraphicsConfigSupported(java.awt.GraphicsConfiguration)

    private static var isGraphicsConfigSupported_MethodID_3: jmethodID?

    open func isGraphicsConfigSupported( arg0: GraphicsConfiguration? ) -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isGraphicsConfigSupported", methodSig: "(Ljava/awt/GraphicsConfiguration;)Z", methodCache: &GraphicsConfigTemplate.isGraphicsConfigSupported_MethodID_3, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }

    open func isGraphicsConfigSupported( _ _arg0: GraphicsConfiguration? ) -> Bool {
        return isGraphicsConfigSupported( arg0: _arg0 )
    }

}
