
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:43 GMT 2016 ///

/// class java.awt.event.MouseEvent ///

open class MouseEvent: InputEvent {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.event.MouseEvent", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var MouseEventJNIClass: jclass?

    /// public static final int java.awt.event.MouseEvent.MOUSE_FIRST

    private static var MOUSE_FIRST_FieldID: jfieldID?

    open static var MOUSE_FIRST: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_FIRST", fieldType: "I", fieldCache: &MOUSE_FIRST_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_LAST

    private static var MOUSE_LAST_FieldID: jfieldID?

    open static var MOUSE_LAST: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_LAST", fieldType: "I", fieldCache: &MOUSE_LAST_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_CLICKED

    private static var MOUSE_CLICKED_FieldID: jfieldID?

    open static var MOUSE_CLICKED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_CLICKED", fieldType: "I", fieldCache: &MOUSE_CLICKED_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_PRESSED

    private static var MOUSE_PRESSED_FieldID: jfieldID?

    open static var MOUSE_PRESSED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_PRESSED", fieldType: "I", fieldCache: &MOUSE_PRESSED_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_RELEASED

    private static var MOUSE_RELEASED_FieldID: jfieldID?

    open static var MOUSE_RELEASED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_RELEASED", fieldType: "I", fieldCache: &MOUSE_RELEASED_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_MOVED

    private static var MOUSE_MOVED_FieldID: jfieldID?

    open static var MOUSE_MOVED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_MOVED", fieldType: "I", fieldCache: &MOUSE_MOVED_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_ENTERED

    private static var MOUSE_ENTERED_FieldID: jfieldID?

    open static var MOUSE_ENTERED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_ENTERED", fieldType: "I", fieldCache: &MOUSE_ENTERED_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_EXITED

    private static var MOUSE_EXITED_FieldID: jfieldID?

    open static var MOUSE_EXITED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_EXITED", fieldType: "I", fieldCache: &MOUSE_EXITED_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_DRAGGED

    private static var MOUSE_DRAGGED_FieldID: jfieldID?

    open static var MOUSE_DRAGGED: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_DRAGGED", fieldType: "I", fieldCache: &MOUSE_DRAGGED_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.MOUSE_WHEEL

    private static var MOUSE_WHEEL_FieldID: jfieldID?

    open static var MOUSE_WHEEL: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "MOUSE_WHEEL", fieldType: "I", fieldCache: &MOUSE_WHEEL_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.NOBUTTON

    private static var NOBUTTON_FieldID: jfieldID?

    open static var NOBUTTON: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "NOBUTTON", fieldType: "I", fieldCache: &NOBUTTON_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.BUTTON1

    private static var BUTTON1_FieldID: jfieldID?

    open static var BUTTON1: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BUTTON1", fieldType: "I", fieldCache: &BUTTON1_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.BUTTON2

    private static var BUTTON2_FieldID: jfieldID?

    open static var BUTTON2: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BUTTON2", fieldType: "I", fieldCache: &BUTTON2_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.event.MouseEvent.BUTTON3

    private static var BUTTON3_FieldID: jfieldID?

    open static var BUTTON3: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "BUTTON3", fieldType: "I", fieldCache: &BUTTON3_FieldID, className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// int java.awt.event.MouseEvent.x

    /// int java.awt.event.MouseEvent.y

    /// private int java.awt.event.MouseEvent.xAbs

    /// private int java.awt.event.MouseEvent.yAbs

    /// int java.awt.event.MouseEvent.clickCount

    /// int java.awt.event.MouseEvent.button

    /// boolean java.awt.event.MouseEvent.popupTrigger

    /// private static final long java.awt.event.MouseEvent.serialVersionUID

    /// public static final int java.awt.event.InputEvent.SHIFT_MASK

    /// public static final int java.awt.event.InputEvent.CTRL_MASK

    /// public static final int java.awt.event.InputEvent.META_MASK

    /// public static final int java.awt.event.InputEvent.ALT_MASK

    /// public static final int java.awt.event.InputEvent.ALT_GRAPH_MASK

    /// public static final int java.awt.event.InputEvent.BUTTON1_MASK

    /// public static final int java.awt.event.InputEvent.BUTTON2_MASK

    /// public static final int java.awt.event.InputEvent.BUTTON3_MASK

    /// public static final int java.awt.event.InputEvent.SHIFT_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.CTRL_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.META_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.ALT_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.BUTTON1_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.BUTTON2_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.BUTTON3_DOWN_MASK

    /// public static final int java.awt.event.InputEvent.ALT_GRAPH_DOWN_MASK

    /// static final int java.awt.event.InputEvent.FIRST_HIGH_BIT

    /// static final int java.awt.event.InputEvent.JDK_1_3_MODIFIERS

    /// static final int java.awt.event.InputEvent.HIGH_MODIFIERS

    /// long java.awt.event.InputEvent.when

    /// int java.awt.event.InputEvent.modifiers

    /// private transient boolean java.awt.event.InputEvent.canAccessSystemClipboard

    /// static final long java.awt.event.InputEvent.serialVersionUID

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_FIRST

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_LAST

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_MOVED

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_RESIZED

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_SHOWN

    /// public static final int java.awt.event.ComponentEvent.COMPONENT_HIDDEN

    /// private static final long java.awt.event.ComponentEvent.serialVersionUID

    /// private byte[] java.awt.AWTEvent.bdata

    /// private long java.awt.AWTEvent.bdata2

    /// protected int java.awt.AWTEvent.id

    private static var id_FieldID: jfieldID?

    override open var id: Int {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetIntField( fieldName: "id", fieldType: "I", fieldCache: &MouseEvent.id_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Int(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetIntField( fieldName: "id", fieldType: "I", fieldCache: &MouseEvent.id_FieldID, object: javaObject, value: __value.i, locals: &__locals )
        }
    }

    /// protected boolean java.awt.AWTEvent.consumed

    private static var consumed_FieldID: jfieldID?

    override open var consumed: Bool {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetBooleanField( fieldName: "consumed", fieldType: "Z", fieldCache: &MouseEvent.consumed_FieldID, object: javaObject, locals: &__locals )
            return JNIType.decode( type: Bool(), from: __value )
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetBooleanField( fieldName: "consumed", fieldType: "Z", fieldCache: &MouseEvent.consumed_FieldID, object: javaObject, value: __value.z, locals: &__locals )
        }
    }

    /// private transient volatile java.security.AccessControlContext java.awt.AWTEvent.acc

    /// transient boolean java.awt.AWTEvent.focusManagerIsDispatching

    /// transient boolean java.awt.AWTEvent.isPosted

    /// private transient boolean java.awt.AWTEvent.isSystemGenerated

    /// public static final long java.awt.AWTEvent.COMPONENT_EVENT_MASK

    /// public static final long java.awt.AWTEvent.CONTAINER_EVENT_MASK

    /// public static final long java.awt.AWTEvent.FOCUS_EVENT_MASK

    /// public static final long java.awt.AWTEvent.KEY_EVENT_MASK

    /// public static final long java.awt.AWTEvent.MOUSE_EVENT_MASK

    /// public static final long java.awt.AWTEvent.MOUSE_MOTION_EVENT_MASK

    /// public static final long java.awt.AWTEvent.WINDOW_EVENT_MASK

    /// public static final long java.awt.AWTEvent.ACTION_EVENT_MASK

    /// public static final long java.awt.AWTEvent.ADJUSTMENT_EVENT_MASK

    /// public static final long java.awt.AWTEvent.ITEM_EVENT_MASK

    /// public static final long java.awt.AWTEvent.TEXT_EVENT_MASK

    /// public static final long java.awt.AWTEvent.INPUT_METHOD_EVENT_MASK

    /// static final long java.awt.AWTEvent.INPUT_METHODS_ENABLED_MASK

    /// public static final long java.awt.AWTEvent.PAINT_EVENT_MASK

    /// public static final long java.awt.AWTEvent.INVOCATION_EVENT_MASK

    /// public static final long java.awt.AWTEvent.HIERARCHY_EVENT_MASK

    /// public static final long java.awt.AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK

    /// public static final long java.awt.AWTEvent.MOUSE_WHEEL_EVENT_MASK

    /// public static final long java.awt.AWTEvent.WINDOW_STATE_EVENT_MASK

    /// public static final long java.awt.AWTEvent.WINDOW_FOCUS_EVENT_MASK

    /// public static final int java.awt.AWTEvent.RESERVED_ID_MAX

    /// private static java.lang.reflect.Field java.awt.AWTEvent.inputEvent_CanAccessSystemClipboard_Field

    /// private static final long java.awt.AWTEvent.serialVersionUID

    /// private static final long java.util.EventObject.serialVersionUID

    /// protected transient java.lang.Object java.util.EventObject.source

    private static var source_FieldID: jfieldID?

    override open var source: java_lang.JavaObject! {
        get {
            var __locals = [jobject]()
            let __value = JNIField.GetObjectField( fieldName: "source", fieldType: "Ljava/lang/Object;", fieldCache: &MouseEvent.source_FieldID, object: javaObject, locals: &__locals )
            return __value != nil ? java_lang.JavaObject( javaObject: __value ) : nil
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = JNIType.encode( value: newValue, locals: &__locals )
            JNIField.SetObjectField( fieldName: "source", fieldType: "Ljava/lang/Object;", fieldCache: &MouseEvent.source_FieldID, object: javaObject, value: __value.l, locals: &__locals )
        }
    }

    /// public java.awt.event.MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean)

    private static var new_MethodID_1: jmethodID?

    public convenience init( arg0: Component?, arg1: Int, arg2: Int64, arg3: Int, arg4: Int, arg5: Int, arg6: Int, arg7: Bool ) {
        var __args = [jvalue]( repeating: jvalue(), count: 8 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        __args[3] = JNIType.encode( value: arg3, locals: &__locals )
        __args[4] = JNIType.encode( value: arg4, locals: &__locals )
        __args[5] = JNIType.encode( value: arg5, locals: &__locals )
        __args[6] = JNIType.encode( value: arg6, locals: &__locals )
        __args[7] = JNIType.encode( value: arg7, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/event/MouseEvent", classCache: &MouseEvent.MouseEventJNIClass, methodSig: "(Ljava/awt/Component;IJIIIIZ)V", methodCache: &MouseEvent.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Component?, _ _arg1: Int, _ _arg2: Int64, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int, _ _arg7: Bool ) {
        self.init( arg0: _arg0, arg1: _arg1, arg2: _arg2, arg3: _arg3, arg4: _arg4, arg5: _arg5, arg6: _arg6, arg7: _arg7 )
    }

    /// public java.awt.event.MouseEvent(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int)

    private static var new_MethodID_2: jmethodID?

    public convenience init( arg0: Component?, arg1: Int, arg2: Int64, arg3: Int, arg4: Int, arg5: Int, arg6: Int, arg7: Int, arg8: Int, arg9: Bool, arg10: Int ) {
        var __args = [jvalue]( repeating: jvalue(), count: 11 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        __args[3] = JNIType.encode( value: arg3, locals: &__locals )
        __args[4] = JNIType.encode( value: arg4, locals: &__locals )
        __args[5] = JNIType.encode( value: arg5, locals: &__locals )
        __args[6] = JNIType.encode( value: arg6, locals: &__locals )
        __args[7] = JNIType.encode( value: arg7, locals: &__locals )
        __args[8] = JNIType.encode( value: arg8, locals: &__locals )
        __args[9] = JNIType.encode( value: arg9, locals: &__locals )
        __args[10] = JNIType.encode( value: arg10, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/event/MouseEvent", classCache: &MouseEvent.MouseEventJNIClass, methodSig: "(Ljava/awt/Component;IJIIIIIIZI)V", methodCache: &MouseEvent.new_MethodID_2, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Component?, _ _arg1: Int, _ _arg2: Int64, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int, _ _arg7: Int, _ _arg8: Int, _ _arg9: Bool, _ _arg10: Int ) {
        self.init( arg0: _arg0, arg1: _arg1, arg2: _arg2, arg3: _arg3, arg4: _arg4, arg5: _arg5, arg6: _arg6, arg7: _arg7, arg8: _arg8, arg9: _arg9, arg10: _arg10 )
    }

    /// public java.awt.event.MouseEvent(java.awt.Component,int,long,int,int,int,int,boolean,int)

    private static var new_MethodID_3: jmethodID?

    public convenience init( arg0: Component?, arg1: Int, arg2: Int64, arg3: Int, arg4: Int, arg5: Int, arg6: Int, arg7: Bool, arg8: Int ) {
        var __args = [jvalue]( repeating: jvalue(), count: 9 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        __args[3] = JNIType.encode( value: arg3, locals: &__locals )
        __args[4] = JNIType.encode( value: arg4, locals: &__locals )
        __args[5] = JNIType.encode( value: arg5, locals: &__locals )
        __args[6] = JNIType.encode( value: arg6, locals: &__locals )
        __args[7] = JNIType.encode( value: arg7, locals: &__locals )
        __args[8] = JNIType.encode( value: arg8, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/event/MouseEvent", classCache: &MouseEvent.MouseEventJNIClass, methodSig: "(Ljava/awt/Component;IJIIIIZI)V", methodCache: &MouseEvent.new_MethodID_3, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Component?, _ _arg1: Int, _ _arg2: Int64, _ _arg3: Int, _ _arg4: Int, _ _arg5: Int, _ _arg6: Int, _ _arg7: Bool, _ _arg8: Int ) {
        self.init( arg0: _arg0, arg1: _arg1, arg2: _arg2, arg3: _arg3, arg4: _arg4, arg5: _arg5, arg6: _arg6, arg7: _arg7, arg8: _arg8 )
    }

    /// private void java.awt.event.MouseEvent.readObject(java.io.ObjectInputStream) throws java.io.IOException,java.lang.ClassNotFoundException

    /// private static void java.awt.event.MouseEvent.initIDs()

    /// public int java.awt.event.MouseEvent.getY()

    private static var getY_MethodID_4: jmethodID?

    open func getY() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getY", methodSig: "()I", methodCache: &MouseEvent.getY_MethodID_4, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }


    /// public int java.awt.event.MouseEvent.getX()

    private static var getX_MethodID_5: jmethodID?

    open func getX() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getX", methodSig: "()I", methodCache: &MouseEvent.getX_MethodID_5, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }


    /// public java.lang.String java.awt.event.MouseEvent.paramString()

    /// public java.awt.Point java.awt.event.MouseEvent.getLocationOnScreen()

    private static var getLocationOnScreen_MethodID_6: jmethodID?

    open func getLocationOnScreen() -> Point! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getLocationOnScreen", methodSig: "()Ljava/awt/Point;", methodCache: &MouseEvent.getLocationOnScreen_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? Point( javaObject: __return ) : nil
    }


    /// public int java.awt.event.MouseEvent.getXOnScreen()

    private static var getXOnScreen_MethodID_7: jmethodID?

    open func getXOnScreen() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getXOnScreen", methodSig: "()I", methodCache: &MouseEvent.getXOnScreen_MethodID_7, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }


    /// public int java.awt.event.MouseEvent.getYOnScreen()

    private static var getYOnScreen_MethodID_8: jmethodID?

    open func getYOnScreen() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getYOnScreen", methodSig: "()I", methodCache: &MouseEvent.getYOnScreen_MethodID_8, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }


    /// public int java.awt.event.MouseEvent.getClickCount()

    private static var getClickCount_MethodID_9: jmethodID?

    open func getClickCount() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getClickCount", methodSig: "()I", methodCache: &MouseEvent.getClickCount_MethodID_9, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }


    /// public boolean java.awt.event.MouseEvent.isPopupTrigger()

    private static var isPopupTrigger_MethodID_10: jmethodID?

    open func isPopupTrigger() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isPopupTrigger", methodSig: "()Z", methodCache: &MouseEvent.isPopupTrigger_MethodID_10, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }


    /// public int java.awt.event.MouseEvent.getButton()

    private static var getButton_MethodID_11: jmethodID?

    open func getButton() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getButton", methodSig: "()I", methodCache: &MouseEvent.getButton_MethodID_11, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }


    /// public synchronized void java.awt.event.MouseEvent.translatePoint(int,int)

    private static var translatePoint_MethodID_12: jmethodID?

    open func translatePoint( arg0: Int, arg1: Int ) {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "translatePoint", methodSig: "(II)V", methodCache: &MouseEvent.translatePoint_MethodID_12, args: &__args, locals: &__locals )
    }

    open func translatePoint( _ _arg0: Int, _ _arg1: Int ) {
        translatePoint( arg0: _arg0, arg1: _arg1 )
    }

    /// public java.awt.Point java.awt.event.MouseEvent.getPoint()

    private static var getPoint_MethodID_13: jmethodID?

    open func getPoint() -> Point! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getPoint", methodSig: "()Ljava/awt/Point;", methodCache: &MouseEvent.getPoint_MethodID_13, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? Point( javaObject: __return ) : nil
    }


    /// public static java.lang.String java.awt.event.MouseEvent.getMouseModifiersText(int)

    private static var getMouseModifiersText_MethodID_14: jmethodID?

    open class func getMouseModifiersText( arg0: Int ) -> String! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/event/MouseEvent", classCache: &MouseEventJNIClass, methodName: "getMouseModifiersText", methodSig: "(I)Ljava/lang/String;", methodCache: &getMouseModifiersText_MethodID_14, args: &__args, locals: &__locals )
        return JNIType.decode( type: String(), from: __return )
    }

    open class func getMouseModifiersText( _ _arg0: Int ) -> String! {
        return getMouseModifiersText( arg0: _arg0 )
    }

    /// private void java.awt.event.MouseEvent.setNewModifiers()

    /// private void java.awt.event.MouseEvent.setOldModifiers()

}
