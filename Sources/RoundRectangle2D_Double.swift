
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.awt.geom.RoundRectangle2D$Double ///

open class RoundRectangle2D_Double: RoundRectangle2D, /* interface java.io.Serializable */ UnavailableProtocol {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.geom.RoundRectangle2D$Double", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var RoundRectangle2D_DoubleJNIClass: jclass?

    /// private static final long java.awt.geom.RoundRectangle2D$Double.serialVersionUID

    /// public double java.awt.geom.RoundRectangle2D$Double.archeight

    private static var archeight_FieldID: jfieldID?

    open var archeight: Double {
        get {
            let __value = JNIField.GetDoubleField( fieldName: "archeight", fieldType: "D", fieldCache: &RoundRectangle2D_Double.archeight_FieldID, object: javaObject )
            return __value
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( d: newValue )
            JNIField.SetDoubleField( fieldName: "archeight", fieldType: "D", fieldCache: &RoundRectangle2D_Double.archeight_FieldID, object: javaObject, value: __value.d, locals: &__locals )
        }
    }

    /// public double java.awt.geom.RoundRectangle2D$Double.arcwidth

    private static var arcwidth_FieldID: jfieldID?

    open var arcwidth: Double {
        get {
            let __value = JNIField.GetDoubleField( fieldName: "arcwidth", fieldType: "D", fieldCache: &RoundRectangle2D_Double.arcwidth_FieldID, object: javaObject )
            return __value
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( d: newValue )
            JNIField.SetDoubleField( fieldName: "arcwidth", fieldType: "D", fieldCache: &RoundRectangle2D_Double.arcwidth_FieldID, object: javaObject, value: __value.d, locals: &__locals )
        }
    }

    /// public double java.awt.geom.RoundRectangle2D$Double.height

    private static var height_FieldID: jfieldID?

    open var height: Double {
        get {
            let __value = JNIField.GetDoubleField( fieldName: "height", fieldType: "D", fieldCache: &RoundRectangle2D_Double.height_FieldID, object: javaObject )
            return __value
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( d: newValue )
            JNIField.SetDoubleField( fieldName: "height", fieldType: "D", fieldCache: &RoundRectangle2D_Double.height_FieldID, object: javaObject, value: __value.d, locals: &__locals )
        }
    }

    /// public double java.awt.geom.RoundRectangle2D$Double.width

    private static var width_FieldID: jfieldID?

    open var width: Double {
        get {
            let __value = JNIField.GetDoubleField( fieldName: "width", fieldType: "D", fieldCache: &RoundRectangle2D_Double.width_FieldID, object: javaObject )
            return __value
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( d: newValue )
            JNIField.SetDoubleField( fieldName: "width", fieldType: "D", fieldCache: &RoundRectangle2D_Double.width_FieldID, object: javaObject, value: __value.d, locals: &__locals )
        }
    }

    /// public double java.awt.geom.RoundRectangle2D$Double.x

    private static var x_FieldID: jfieldID?

    open var x: Double {
        get {
            let __value = JNIField.GetDoubleField( fieldName: "x", fieldType: "D", fieldCache: &RoundRectangle2D_Double.x_FieldID, object: javaObject )
            return __value
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( d: newValue )
            JNIField.SetDoubleField( fieldName: "x", fieldType: "D", fieldCache: &RoundRectangle2D_Double.x_FieldID, object: javaObject, value: __value.d, locals: &__locals )
        }
    }

    /// public double java.awt.geom.RoundRectangle2D$Double.y

    private static var y_FieldID: jfieldID?

    open var y: Double {
        get {
            let __value = JNIField.GetDoubleField( fieldName: "y", fieldType: "D", fieldCache: &RoundRectangle2D_Double.y_FieldID, object: javaObject )
            return __value
        }
        set(newValue) {
            var __locals = [jobject]()
            let __value = jvalue( d: newValue )
            JNIField.SetDoubleField( fieldName: "y", fieldType: "D", fieldCache: &RoundRectangle2D_Double.y_FieldID, object: javaObject, value: __value.d, locals: &__locals )
        }
    }

    /// public java.awt.geom.RoundRectangle2D$Double()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        let __object = JNIMethod.NewObject( className: "java/awt/geom/RoundRectangle2D$Double", classCache: &RoundRectangle2D_Double.RoundRectangle2D_DoubleJNIClass, methodSig: "()V", methodCache: &RoundRectangle2D_Double.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public java.awt.geom.RoundRectangle2D$Double(double,double,double,double,double,double)

    private static var new_MethodID_2: jmethodID?

    public convenience init( x: Double, y: Double, w: Double, h: Double, arcw: Double, arch: Double ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 6 )
        __args[0] = jvalue( d: x )
        __args[1] = jvalue( d: y )
        __args[2] = jvalue( d: w )
        __args[3] = jvalue( d: h )
        __args[4] = jvalue( d: arcw )
        __args[5] = jvalue( d: arch )
        let __object = JNIMethod.NewObject( className: "java/awt/geom/RoundRectangle2D$Double", classCache: &RoundRectangle2D_Double.RoundRectangle2D_DoubleJNIClass, methodSig: "(DDDDDD)V", methodCache: &RoundRectangle2D_Double.new_MethodID_2, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _x: Double, _ _y: Double, _ _w: Double, _ _h: Double, _ _arcw: Double, _ _arch: Double ) {
        self.init( x: _x, y: _y, w: _w, h: _h, arcw: _arcw, arch: _arch )
    }

    /// public double java.awt.geom.RoundRectangle2D$Double.getArcHeight()

    // Skipping method: false true false false false 

    /// public double java.awt.geom.RoundRectangle2D$Double.getArcWidth()

    // Skipping method: false true false false false 

    /// public java.awt.geom.Rectangle2D java.awt.geom.RoundRectangle2D$Double.getBounds2D()

    // Skipping method: false true false false false 

    /// public double java.awt.geom.RoundRectangle2D$Double.getHeight()

    // Skipping method: false true false false false 

    /// public double java.awt.geom.RoundRectangle2D$Double.getWidth()

    // Skipping method: false true false false false 

    /// public double java.awt.geom.RoundRectangle2D$Double.getX()

    // Skipping method: false true false false false 

    /// public double java.awt.geom.RoundRectangle2D$Double.getY()

    // Skipping method: false true false false false 

    /// public boolean java.awt.geom.RoundRectangle2D$Double.isEmpty()

    // Skipping method: false true false false false 

    /// public void java.awt.geom.RoundRectangle2D$Double.setRoundRect(double,double,double,double,double,double)

    private static var setRoundRect_MethodID_3: jmethodID?

    open func setRoundRect( x: Double, y: Double, w: Double, h: Double, arcw: Double, arch: Double ) {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 6 )
        __args[0] = jvalue( d: x )
        __args[1] = jvalue( d: y )
        __args[2] = jvalue( d: w )
        __args[3] = jvalue( d: h )
        __args[4] = jvalue( d: arcw )
        __args[5] = jvalue( d: arch )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setRoundRect", methodSig: "(DDDDDD)V", methodCache: &RoundRectangle2D_Double.setRoundRect_MethodID_3, args: &__args, locals: &__locals )
    }

    override open func setRoundRect( _ _x: Double, _ _y: Double, _ _w: Double, _ _h: Double, _ _arcw: Double, _ _arch: Double ) {
        setRoundRect( x: _x, y: _y, w: _w, h: _h, arcw: _arcw, arch: _arch )
    }

    /// public void java.awt.geom.RoundRectangle2D$Double.setRoundRect(java.awt.geom.RoundRectangle2D)

    // Skipping method: false true false false false 

}

