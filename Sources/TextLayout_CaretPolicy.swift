
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.awt.font.TextLayout$CaretPolicy ///

open class TextLayout_CaretPolicy: java_swift.JavaObject {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var TextLayout_CaretPolicyJNIClass: jclass?

    /// public java.awt.font.TextLayout$CaretPolicy()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/font/TextLayout$CaretPolicy", classCache: &TextLayout_CaretPolicy.TextLayout_CaretPolicyJNIClass, methodSig: "()V", methodCache: &TextLayout_CaretPolicy.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public java.awt.font.TextHitInfo java.awt.font.TextLayout$CaretPolicy.getStrongCaret(java.awt.font.TextHitInfo,java.awt.font.TextHitInfo,java.awt.font.TextLayout)

    private static var getStrongCaret_MethodID_2: jmethodID?

    open func getStrongCaret( hit1: TextHitInfo?, hit2: TextHitInfo?, layout: TextLayout? ) -> TextHitInfo! {
        var __args = [jvalue]( repeating: jvalue(), count: 3 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: hit1 != nil ? hit1! as JNIObject : nil, locals: &__locals )
        __args[1] = JNIType.toJava( value: hit2 != nil ? hit2! as JNIObject : nil, locals: &__locals )
        __args[2] = JNIType.toJava( value: layout != nil ? layout! as JNIObject : nil, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getStrongCaret", methodSig: "(Ljava/awt/font/TextHitInfo;Ljava/awt/font/TextHitInfo;Ljava/awt/font/TextLayout;)Ljava/awt/font/TextHitInfo;", methodCache: &TextLayout_CaretPolicy.getStrongCaret_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? TextHitInfo( javaObject: __return ) : nil
    }

    open func getStrongCaret( _ _hit1: TextHitInfo?, _ _hit2: TextHitInfo?, _ _layout: TextLayout? ) -> TextHitInfo! {
        return getStrongCaret( hit1: _hit1, hit2: _hit2, layout: _layout )
    }

}

