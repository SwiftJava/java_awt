
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:51 GMT 2016 ///

/// interface java.awt.peer.KeyboardFocusManagerPeer ///

public protocol KeyboardFocusManagerPeer: JavaProtocol {

    /// public abstract void java.awt.peer.KeyboardFocusManagerPeer.clearGlobalFocusOwner(java.awt.Window)

    func clearGlobalFocusOwner( arg0: Window? )
    func clearGlobalFocusOwner( _ _arg0: Window? )

    /// public abstract java.awt.Component java.awt.peer.KeyboardFocusManagerPeer.getCurrentFocusOwner()

    func getCurrentFocusOwner() -> Component!

    /// public abstract void java.awt.peer.KeyboardFocusManagerPeer.setCurrentFocusOwner(java.awt.Component)

    func setCurrentFocusOwner( arg0: Component? )
    func setCurrentFocusOwner( _ _arg0: Component? )

    /// public abstract java.awt.Window java.awt.peer.KeyboardFocusManagerPeer.getCurrentFocusedWindow()

    func getCurrentFocusedWindow() -> Window!

    /// public abstract void java.awt.peer.KeyboardFocusManagerPeer.setCurrentFocusedWindow(java.awt.Window)

    func setCurrentFocusedWindow( arg0: Window? )
    func setCurrentFocusedWindow( _ _arg0: Window? )

}

open class KeyboardFocusManagerPeerForward: JNIObjectForward, KeyboardFocusManagerPeer {

    private static var KeyboardFocusManagerPeerJNIClass: jclass?

    /// public abstract void java.awt.peer.KeyboardFocusManagerPeer.clearGlobalFocusOwner(java.awt.Window)

    private static var clearGlobalFocusOwner_MethodID_6: jmethodID?

    open func clearGlobalFocusOwner( arg0: Window? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "clearGlobalFocusOwner", methodSig: "(Ljava/awt/Window;)V", methodCache: &KeyboardFocusManagerPeerForward.clearGlobalFocusOwner_MethodID_6, args: &__args, locals: &__locals )
    }

    open func clearGlobalFocusOwner( _ _arg0: Window? ) {
        clearGlobalFocusOwner( arg0: _arg0 )
    }

    /// public abstract java.awt.Component java.awt.peer.KeyboardFocusManagerPeer.getCurrentFocusOwner()

    private static var getCurrentFocusOwner_MethodID_7: jmethodID?

    open func getCurrentFocusOwner() -> Component! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getCurrentFocusOwner", methodSig: "()Ljava/awt/Component;", methodCache: &KeyboardFocusManagerPeerForward.getCurrentFocusOwner_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? Component( javaObject: __return ) : nil
    }


    /// public abstract void java.awt.peer.KeyboardFocusManagerPeer.setCurrentFocusOwner(java.awt.Component)

    private static var setCurrentFocusOwner_MethodID_8: jmethodID?

    open func setCurrentFocusOwner( arg0: Component? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setCurrentFocusOwner", methodSig: "(Ljava/awt/Component;)V", methodCache: &KeyboardFocusManagerPeerForward.setCurrentFocusOwner_MethodID_8, args: &__args, locals: &__locals )
    }

    open func setCurrentFocusOwner( _ _arg0: Component? ) {
        setCurrentFocusOwner( arg0: _arg0 )
    }

    /// public abstract java.awt.Window java.awt.peer.KeyboardFocusManagerPeer.getCurrentFocusedWindow()

    private static var getCurrentFocusedWindow_MethodID_9: jmethodID?

    open func getCurrentFocusedWindow() -> Window! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getCurrentFocusedWindow", methodSig: "()Ljava/awt/Window;", methodCache: &KeyboardFocusManagerPeerForward.getCurrentFocusedWindow_MethodID_9, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? Window( javaObject: __return ) : nil
    }


    /// public abstract void java.awt.peer.KeyboardFocusManagerPeer.setCurrentFocusedWindow(java.awt.Window)

    private static var setCurrentFocusedWindow_MethodID_10: jmethodID?

    open func setCurrentFocusedWindow( arg0: Window? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setCurrentFocusedWindow", methodSig: "(Ljava/awt/Window;)V", methodCache: &KeyboardFocusManagerPeerForward.setCurrentFocusedWindow_MethodID_10, args: &__args, locals: &__locals )
    }

    open func setCurrentFocusedWindow( _ _arg0: Window? ) {
        setCurrentFocusedWindow( arg0: _arg0 )
    }

}


