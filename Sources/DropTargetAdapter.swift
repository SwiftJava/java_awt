
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:05 GMT 2016 ///

/// class java.awt.dnd.DropTargetAdapter ///

open class DropTargetAdapter: java_lang.JavaObject, DropTargetListener {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.dnd.DropTargetAdapter", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var DropTargetAdapterJNIClass: jclass?

    /// public java.awt.dnd.DropTargetAdapter()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/dnd/DropTargetAdapter", classCache: &DropTargetAdapter.DropTargetAdapterJNIClass, methodSig: "()V", methodCache: &DropTargetAdapter.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public void java.awt.dnd.DropTargetAdapter.dragEnter(java.awt.dnd.DropTargetDragEvent)

    private static var dragEnter_MethodID_2: jmethodID?

    open func dragEnter( arg0: DropTargetDragEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "dragEnter", methodSig: "(Ljava/awt/dnd/DropTargetDragEvent;)V", methodCache: &DropTargetAdapter.dragEnter_MethodID_2, args: &__args, locals: &__locals )
    }

    open func dragEnter( _ _arg0: DropTargetDragEvent? ) {
        dragEnter( arg0: _arg0 )
    }

    /// public void java.awt.dnd.DropTargetAdapter.dragOver(java.awt.dnd.DropTargetDragEvent)

    private static var dragOver_MethodID_3: jmethodID?

    open func dragOver( arg0: DropTargetDragEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "dragOver", methodSig: "(Ljava/awt/dnd/DropTargetDragEvent;)V", methodCache: &DropTargetAdapter.dragOver_MethodID_3, args: &__args, locals: &__locals )
    }

    open func dragOver( _ _arg0: DropTargetDragEvent? ) {
        dragOver( arg0: _arg0 )
    }

    /// public void java.awt.dnd.DropTargetAdapter.dropActionChanged(java.awt.dnd.DropTargetDragEvent)

    private static var dropActionChanged_MethodID_4: jmethodID?

    open func dropActionChanged( arg0: DropTargetDragEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "dropActionChanged", methodSig: "(Ljava/awt/dnd/DropTargetDragEvent;)V", methodCache: &DropTargetAdapter.dropActionChanged_MethodID_4, args: &__args, locals: &__locals )
    }

    open func dropActionChanged( _ _arg0: DropTargetDragEvent? ) {
        dropActionChanged( arg0: _arg0 )
    }

    /// public void java.awt.dnd.DropTargetAdapter.dragExit(java.awt.dnd.DropTargetEvent)

    private static var dragExit_MethodID_5: jmethodID?

    open func dragExit( arg0: DropTargetEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "dragExit", methodSig: "(Ljava/awt/dnd/DropTargetEvent;)V", methodCache: &DropTargetAdapter.dragExit_MethodID_5, args: &__args, locals: &__locals )
    }

    open func dragExit( _ _arg0: DropTargetEvent? ) {
        dragExit( arg0: _arg0 )
    }

    /// In declared protocol but not defined.. ///

    /// public abstract void java.awt.dnd.DropTargetListener.drop(java.awt.dnd.DropTargetDropEvent)

    private static var drop_MethodID_6: jmethodID?

    open func drop( arg0: DropTargetDropEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "drop", methodSig: "(Ljava/awt/dnd/DropTargetDropEvent;)V", methodCache: &DropTargetAdapter.drop_MethodID_6, args: &__args, locals: &__locals )
    }

    open func drop( _ _arg0: DropTargetDropEvent? ) {
        drop( arg0: _arg0 )
    }

}
