
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:32 GMT 2016 ///

/// class java.awt.AlphaComposite ///

open class AlphaComposite: java_lang.JavaObject, Composite {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.AlphaComposite", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var AlphaCompositeJNIClass: jclass?

    /// public static final int java.awt.AlphaComposite.CLEAR

    private static var CLEAR_FieldID: jfieldID?

    open static var CLEAR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLEAR", fieldType: "I", fieldCache: &CLEAR_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.SRC

    private static var SRC_FieldID: jfieldID?

    open static var SRC: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "SRC", fieldType: "I", fieldCache: &SRC_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.DST

    private static var DST_FieldID: jfieldID?

    open static var DST: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DST", fieldType: "I", fieldCache: &DST_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.SRC_OVER

    private static var SRC_OVER_FieldID: jfieldID?

    open static var SRC_OVER: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "SRC_OVER", fieldType: "I", fieldCache: &SRC_OVER_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.DST_OVER

    private static var DST_OVER_FieldID: jfieldID?

    open static var DST_OVER: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DST_OVER", fieldType: "I", fieldCache: &DST_OVER_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.SRC_IN

    private static var SRC_IN_FieldID: jfieldID?

    open static var SRC_IN: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "SRC_IN", fieldType: "I", fieldCache: &SRC_IN_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.DST_IN

    private static var DST_IN_FieldID: jfieldID?

    open static var DST_IN: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DST_IN", fieldType: "I", fieldCache: &DST_IN_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.SRC_OUT

    private static var SRC_OUT_FieldID: jfieldID?

    open static var SRC_OUT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "SRC_OUT", fieldType: "I", fieldCache: &SRC_OUT_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.DST_OUT

    private static var DST_OUT_FieldID: jfieldID?

    open static var DST_OUT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DST_OUT", fieldType: "I", fieldCache: &DST_OUT_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.SRC_ATOP

    private static var SRC_ATOP_FieldID: jfieldID?

    open static var SRC_ATOP: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "SRC_ATOP", fieldType: "I", fieldCache: &SRC_ATOP_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.DST_ATOP

    private static var DST_ATOP_FieldID: jfieldID?

    open static var DST_ATOP: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "DST_ATOP", fieldType: "I", fieldCache: &DST_ATOP_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.AlphaComposite.XOR

    private static var XOR_FieldID: jfieldID?

    open static var XOR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "XOR", fieldType: "I", fieldCache: &XOR_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return JNIType.decode( type: Int(), from: __value )
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.Clear

    private static var Clear_FieldID: jfieldID?

    open static var Clear: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "Clear", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &Clear_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.Src

    private static var Src_FieldID: jfieldID?

    open static var Src: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "Src", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &Src_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.Dst

    private static var Dst_FieldID: jfieldID?

    open static var Dst: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "Dst", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &Dst_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.SrcOver

    private static var SrcOver_FieldID: jfieldID?

    open static var SrcOver: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "SrcOver", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &SrcOver_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.DstOver

    private static var DstOver_FieldID: jfieldID?

    open static var DstOver: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "DstOver", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &DstOver_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.SrcIn

    private static var SrcIn_FieldID: jfieldID?

    open static var SrcIn: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "SrcIn", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &SrcIn_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.DstIn

    private static var DstIn_FieldID: jfieldID?

    open static var DstIn: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "DstIn", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &DstIn_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.SrcOut

    private static var SrcOut_FieldID: jfieldID?

    open static var SrcOut: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "SrcOut", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &SrcOut_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.DstOut

    private static var DstOut_FieldID: jfieldID?

    open static var DstOut: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "DstOut", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &DstOut_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.SrcAtop

    private static var SrcAtop_FieldID: jfieldID?

    open static var SrcAtop: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "SrcAtop", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &SrcAtop_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.DstAtop

    private static var DstAtop_FieldID: jfieldID?

    open static var DstAtop: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "DstAtop", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &DstAtop_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// public static final java.awt.AlphaComposite java.awt.AlphaComposite.Xor

    private static var Xor_FieldID: jfieldID?

    open static var Xor: AlphaComposite! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "Xor", fieldType: "Ljava/awt/AlphaComposite;", fieldCache: &Xor_FieldID, className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass )
            return __value != nil ? AlphaComposite( javaObject: __value ) : nil
        }
    }

    /// private static final int java.awt.AlphaComposite.MIN_RULE

    /// private static final int java.awt.AlphaComposite.MAX_RULE

    /// float java.awt.AlphaComposite.extraAlpha

    /// int java.awt.AlphaComposite.rule

    /// private java.awt.AlphaComposite(int)

    /// private java.awt.AlphaComposite(int,float)

    /// public boolean java.awt.AlphaComposite.equals(java.lang.Object)

    /// public int java.awt.AlphaComposite.hashCode()

    /// public static java.awt.AlphaComposite java.awt.AlphaComposite.getInstance(int,float)

    private static var getInstance_MethodID_1: jmethodID?

    open class func getInstance( arg0: Int, arg1: Float ) -> AlphaComposite! {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass, methodName: "getInstance", methodSig: "(IF)Ljava/awt/AlphaComposite;", methodCache: &getInstance_MethodID_1, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? AlphaComposite( javaObject: __return ) : nil
    }

    open class func getInstance( _ _arg0: Int, _ _arg1: Float ) -> AlphaComposite! {
        return getInstance( arg0: _arg0, arg1: _arg1 )
    }

    /// public static java.awt.AlphaComposite java.awt.AlphaComposite.getInstance(int)

    private static var getInstance_MethodID_2: jmethodID?

    open class func getInstance( arg0: Int ) -> AlphaComposite! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/AlphaComposite", classCache: &AlphaCompositeJNIClass, methodName: "getInstance", methodSig: "(I)Ljava/awt/AlphaComposite;", methodCache: &getInstance_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? AlphaComposite( javaObject: __return ) : nil
    }

    open class func getInstance( _ _arg0: Int ) -> AlphaComposite! {
        return getInstance( arg0: _arg0 )
    }

    /// public float java.awt.AlphaComposite.getAlpha()

    private static var getAlpha_MethodID_3: jmethodID?

    open func getAlpha() -> Float {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallFloatMethod( object: javaObject, methodName: "getAlpha", methodSig: "()F", methodCache: &AlphaComposite.getAlpha_MethodID_3, args: &__args, locals: &__locals )
        return JNIType.decode( type: Float(), from: __return )
    }


    /// public java.awt.CompositeContext java.awt.AlphaComposite.createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)

    private static var createContext_MethodID_4: jmethodID?

    open func createContext( arg0: ColorModel?, arg1: ColorModel?, arg2: RenderingHints? ) -> CompositeContext! {
        var __args = [jvalue]( repeating: jvalue(), count: 3 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "createContext", methodSig: "(Ljava/awt/image/ColorModel;Ljava/awt/image/ColorModel;Ljava/awt/RenderingHints;)Ljava/awt/CompositeContext;", methodCache: &AlphaComposite.createContext_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? CompositeContextForward( javaObject: __return ) : nil
    }

    open func createContext( _ _arg0: ColorModel?, _ _arg1: ColorModel?, _ _arg2: RenderingHints? ) -> CompositeContext! {
        return createContext( arg0: _arg0, arg1: _arg1, arg2: _arg2 )
    }

    /// public java.awt.AlphaComposite java.awt.AlphaComposite.derive(int)

    private static var derive_MethodID_5: jmethodID?

    open func derive( arg0: Int ) -> AlphaComposite! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "derive", methodSig: "(I)Ljava/awt/AlphaComposite;", methodCache: &AlphaComposite.derive_MethodID_5, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? AlphaComposite( javaObject: __return ) : nil
    }

    open func derive( _ _arg0: Int ) -> AlphaComposite! {
        return derive( arg0: _arg0 )
    }

    /// public java.awt.AlphaComposite java.awt.AlphaComposite.derive(float)

    private static var derive_MethodID_6: jmethodID?

    open func derive( arg0: Float ) -> AlphaComposite! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "derive", methodSig: "(F)Ljava/awt/AlphaComposite;", methodCache: &AlphaComposite.derive_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? AlphaComposite( javaObject: __return ) : nil
    }

    open func derive( _ _arg0: Float ) -> AlphaComposite! {
        return derive( arg0: _arg0 )
    }

    /// public int java.awt.AlphaComposite.getRule()

    private static var getRule_MethodID_7: jmethodID?

    open func getRule() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getRule", methodSig: "()I", methodCache: &AlphaComposite.getRule_MethodID_7, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }


}
