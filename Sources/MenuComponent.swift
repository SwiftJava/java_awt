
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:47 GMT 2016 ///

/// class java.awt.MenuComponent ///

open class MenuComponent: java_lang.JavaObject, /* java.io.Serializable */ UnclassedProtocol {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.MenuComponent", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var MenuComponentJNIClass: jclass?

    /// transient java.awt.peer.MenuComponentPeer java.awt.MenuComponent.peer

    /// transient java.awt.MenuContainer java.awt.MenuComponent.parent

    /// transient sun.awt.AppContext java.awt.MenuComponent.appContext

    /// java.awt.Font java.awt.MenuComponent.font

    /// private java.lang.String java.awt.MenuComponent.name

    /// private boolean java.awt.MenuComponent.nameExplicitlySet

    /// boolean java.awt.MenuComponent.newEventsOnly

    /// private transient volatile java.security.AccessControlContext java.awt.MenuComponent.acc

    /// static final java.lang.String java.awt.MenuComponent.actionListenerK

    /// static final java.lang.String java.awt.MenuComponent.itemListenerK

    /// private static final long java.awt.MenuComponent.serialVersionUID

    /// private transient java.lang.Object java.awt.MenuComponent.privateKey

    /// javax.accessibility.AccessibleContext java.awt.MenuComponent.accessibleContext

    /// public java.awt.MenuComponent() throws java.awt.HeadlessException

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/MenuComponent", classCache: &MenuComponent.MenuComponentJNIClass, methodSig: "()V", methodCache: &MenuComponent.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public java.lang.String java.awt.MenuComponent.toString()

    /// public java.lang.String java.awt.MenuComponent.getName()

    private static var getName_MethodID_2: jmethodID?

    open func getName() -> String! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getName", methodSig: "()Ljava/lang/String;", methodCache: &MenuComponent.getName_MethodID_2, args: &__args, locals: &__locals )
        return JNIType.decode( type: String(), from: __return )
    }


    /// public java.awt.MenuContainer java.awt.MenuComponent.getParent()

    private static var getParent_MethodID_3: jmethodID?

    open func getParent() -> MenuContainer! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getParent", methodSig: "()Ljava/awt/MenuContainer;", methodCache: &MenuComponent.getParent_MethodID_3, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? MenuContainerForward( javaObject: __return ) : nil
    }


    /// static java.lang.Object java.awt.MenuComponent.access$000(java.awt.MenuComponent)

    /// public void java.awt.MenuComponent.setName(java.lang.String)

    private static var setName_MethodID_4: jmethodID?

    open func setName( arg0: String? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setName", methodSig: "(Ljava/lang/String;)V", methodCache: &MenuComponent.setName_MethodID_4, args: &__args, locals: &__locals )
    }

    open func setName( _ _arg0: String? ) {
        setName( arg0: _arg0 )
    }

    /// private void java.awt.MenuComponent.readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException,java.io.IOException,java.awt.HeadlessException

    /// private static void java.awt.MenuComponent.initIDs()

    /// public boolean java.awt.MenuComponent.postEvent(java.awt.Event)

    private static var postEvent_MethodID_5: jmethodID?

    open func postEvent( arg0: Event? ) -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "postEvent", methodSig: "(Ljava/awt/Event;)Z", methodCache: &MenuComponent.postEvent_MethodID_5, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }

    open func postEvent( _ _arg0: Event? ) -> Bool {
        return postEvent( arg0: _arg0 )
    }

    /// public java.awt.peer.MenuComponentPeer java.awt.MenuComponent.getPeer()

    private static var getPeer_MethodID_6: jmethodID?

    open func getPeer() -> MenuComponentPeer! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getPeer", methodSig: "()Ljava/awt/peer/MenuComponentPeer;", methodCache: &MenuComponent.getPeer_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? MenuComponentPeerForward( javaObject: __return ) : nil
    }


    /// public java.awt.Font java.awt.MenuComponent.getFont()

    private static var getFont_MethodID_7: jmethodID?

    open func getFont() -> Font! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getFont", methodSig: "()Ljava/awt/Font;", methodCache: &MenuComponent.getFont_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? Font( javaObject: __return ) : nil
    }


    /// public final void java.awt.MenuComponent.dispatchEvent(java.awt.AWTEvent)

    private static var dispatchEvent_MethodID_8: jmethodID?

    open func dispatchEvent( arg0: AWTEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "dispatchEvent", methodSig: "(Ljava/awt/AWTEvent;)V", methodCache: &MenuComponent.dispatchEvent_MethodID_8, args: &__args, locals: &__locals )
    }

    open func dispatchEvent( _ _arg0: AWTEvent? ) {
        dispatchEvent( arg0: _arg0 )
    }

    /// void java.awt.MenuComponent.dispatchEventImpl(java.awt.AWTEvent)

    /// final java.security.AccessControlContext java.awt.MenuComponent.getAccessControlContext()

    /// public void java.awt.MenuComponent.setFont(java.awt.Font)

    private static var setFont_MethodID_9: jmethodID?

    open func setFont( arg0: Font? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setFont", methodSig: "(Ljava/awt/Font;)V", methodCache: &MenuComponent.setFont_MethodID_9, args: &__args, locals: &__locals )
    }

    open func setFont( _ _arg0: Font? ) {
        setFont( arg0: _arg0 )
    }

    /// protected java.lang.String java.awt.MenuComponent.paramString()

    private static var paramString_MethodID_10: jmethodID?

    open func paramString() -> String! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "paramString", methodSig: "()Ljava/lang/String;", methodCache: &MenuComponent.paramString_MethodID_10, args: &__args, locals: &__locals )
        return JNIType.decode( type: String(), from: __return )
    }


    /// public javax.accessibility.AccessibleContext java.awt.MenuComponent.getAccessibleContext()

    private static var getAccessibleContext_MethodID_11: jmethodID?

    open func getAccessibleContext() -> /* javax.accessibility.AccessibleContext */ UnclassedObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getAccessibleContext", methodSig: "()Ljavax/accessibility/AccessibleContext;", methodCache: &MenuComponent.getAccessibleContext_MethodID_11, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* javax.accessibility.AccessibleContext */ UnclassedObject( javaObject: __return ) : nil
    }


    /// public void java.awt.MenuComponent.removeNotify()

    private static var removeNotify_MethodID_12: jmethodID?

    open func removeNotify() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "removeNotify", methodSig: "()V", methodCache: &MenuComponent.removeNotify_MethodID_12, args: &__args, locals: &__locals )
    }


    /// protected final java.lang.Object java.awt.MenuComponent.getTreeLock()

    private static var getTreeLock_MethodID_13: jmethodID?

    open func getTreeLock() -> java_lang.JavaObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getTreeLock", methodSig: "()Ljava/lang/Object;", methodCache: &MenuComponent.getTreeLock_MethodID_13, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? java_lang.JavaObject( javaObject: __return ) : nil
    }


    /// boolean java.awt.MenuComponent.eventEnabled(java.awt.AWTEvent)

    /// protected void java.awt.MenuComponent.processEvent(java.awt.AWTEvent)

    private static var processEvent_MethodID_14: jmethodID?

    open func processEvent( arg0: AWTEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "processEvent", methodSig: "(Ljava/awt/AWTEvent;)V", methodCache: &MenuComponent.processEvent_MethodID_14, args: &__args, locals: &__locals )
    }

    open func processEvent( _ _arg0: AWTEvent? ) {
        processEvent( arg0: _arg0 )
    }

    /// java.lang.String java.awt.MenuComponent.constructComponentName()

    /// final java.awt.MenuContainer java.awt.MenuComponent.getParent_NoClientCode()

    /// final java.awt.Font java.awt.MenuComponent.getFont_NoClientCode()

    /// int java.awt.MenuComponent.getAccessibleIndexInParent()

    /// javax.accessibility.AccessibleStateSet java.awt.MenuComponent.getAccessibleStateSet()

    /// int java.awt.MenuComponent.getAccessibleChildIndex(java.awt.MenuComponent)

}
