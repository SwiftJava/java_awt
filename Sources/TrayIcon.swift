
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:00 GMT 2016 ///

/// class java.awt.TrayIcon ///

open class TrayIcon: java_lang.JavaObject {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.TrayIcon", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var TrayIconJNIClass: jclass?

    /// private java.awt.Image java.awt.TrayIcon.image

    /// private java.lang.String java.awt.TrayIcon.tooltip

    /// private java.awt.PopupMenu java.awt.TrayIcon.popup

    /// private boolean java.awt.TrayIcon.autosize

    /// private int java.awt.TrayIcon.id

    /// private java.lang.String java.awt.TrayIcon.actionCommand

    /// private transient java.awt.peer.TrayIconPeer java.awt.TrayIcon.peer

    /// transient java.awt.event.MouseListener java.awt.TrayIcon.mouseListener

    /// transient java.awt.event.MouseMotionListener java.awt.TrayIcon.mouseMotionListener

    /// transient java.awt.event.ActionListener java.awt.TrayIcon.actionListener

    /// private transient java.lang.Object java.awt.TrayIcon.privateKey

    /// private final java.security.AccessControlContext java.awt.TrayIcon.acc

    /// public java.awt.TrayIcon(java.awt.Image)

    private static var new_MethodID_1: jmethodID?

    public convenience init( arg0: Image? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/TrayIcon", classCache: &TrayIcon.TrayIconJNIClass, methodSig: "(Ljava/awt/Image;)V", methodCache: &TrayIcon.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Image? ) {
        self.init( arg0: _arg0 )
    }

    /// public java.awt.TrayIcon(java.awt.Image,java.lang.String)

    private static var new_MethodID_2: jmethodID?

    public convenience init( arg0: Image?, arg1: String? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/TrayIcon", classCache: &TrayIcon.TrayIconJNIClass, methodSig: "(Ljava/awt/Image;Ljava/lang/String;)V", methodCache: &TrayIcon.new_MethodID_2, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Image?, _ _arg1: String? ) {
        self.init( arg0: _arg0, arg1: _arg1 )
    }

    /// public java.awt.TrayIcon(java.awt.Image,java.lang.String,java.awt.PopupMenu)

    private static var new_MethodID_3: jmethodID?

    public convenience init( arg0: Image?, arg1: String?, arg2: PopupMenu? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 3 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/TrayIcon", classCache: &TrayIcon.TrayIconJNIClass, methodSig: "(Ljava/awt/Image;Ljava/lang/String;Ljava/awt/PopupMenu;)V", methodCache: &TrayIcon.new_MethodID_3, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Image?, _ _arg1: String?, _ _arg2: PopupMenu? ) {
        self.init( arg0: _arg0, arg1: _arg1, arg2: _arg2 )
    }

    /// private java.awt.TrayIcon() throws java.lang.UnsupportedOperationException,java.awt.HeadlessException,java.lang.SecurityException

    /// static java.lang.Object java.awt.TrayIcon.access$000(java.awt.TrayIcon)

    /// public java.awt.Dimension java.awt.TrayIcon.getSize()

    private static var getSize_MethodID_4: jmethodID?

    open func getSize() -> Dimension! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getSize", methodSig: "()Ljava/awt/Dimension;", methodCache: &TrayIcon.getSize_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? Dimension( javaObject: __return ) : nil
    }


    /// private static native void java.awt.TrayIcon.initIDs()

    /// int java.awt.TrayIcon.getID()

    /// void java.awt.TrayIcon.setID(int)

    /// public java.awt.Image java.awt.TrayIcon.getImage()

    private static var getImage_MethodID_5: jmethodID?

    open func getImage() -> Image! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getImage", methodSig: "()Ljava/awt/Image;", methodCache: &TrayIcon.getImage_MethodID_5, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? Image( javaObject: __return ) : nil
    }


    /// java.util.EventListener[] java.awt.TrayIcon.getListeners(java.lang.Class)

    /// void java.awt.TrayIcon.dispatchEvent(java.awt.AWTEvent)

    /// final java.security.AccessControlContext java.awt.TrayIcon.getAccessControlContext()

    /// void java.awt.TrayIcon.addNotify() throws java.awt.AWTException

    /// void java.awt.TrayIcon.processMouseEvent(java.awt.event.MouseEvent)

    /// void java.awt.TrayIcon.processMouseMotionEvent(java.awt.event.MouseEvent)

    /// void java.awt.TrayIcon.removeNotify()

    /// void java.awt.TrayIcon.processEvent(java.awt.AWTEvent)

    /// public synchronized void java.awt.TrayIcon.addMouseListener(java.awt.event.MouseListener)

    private static var addMouseListener_MethodID_6: jmethodID?

    open func addMouseListener( arg0: MouseListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "addMouseListener", methodSig: "(Ljava/awt/event/MouseListener;)V", methodCache: &TrayIcon.addMouseListener_MethodID_6, args: &__args, locals: &__locals )
    }

    open func addMouseListener( _ _arg0: MouseListener? ) {
        addMouseListener( arg0: _arg0 )
    }

    /// public synchronized void java.awt.TrayIcon.removeMouseListener(java.awt.event.MouseListener)

    private static var removeMouseListener_MethodID_7: jmethodID?

    open func removeMouseListener( arg0: MouseListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "removeMouseListener", methodSig: "(Ljava/awt/event/MouseListener;)V", methodCache: &TrayIcon.removeMouseListener_MethodID_7, args: &__args, locals: &__locals )
    }

    open func removeMouseListener( _ _arg0: MouseListener? ) {
        removeMouseListener( arg0: _arg0 )
    }

    /// public synchronized java.awt.event.MouseListener[] java.awt.TrayIcon.getMouseListeners()

    private static var getMouseListeners_MethodID_8: jmethodID?

    open func getMouseListeners() -> [MouseListener]! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getMouseListeners", methodSig: "()[Ljava/awt/event/MouseListener;", methodCache: &TrayIcon.getMouseListeners_MethodID_8, args: &__args, locals: &__locals )
        return JNIType.decode( type: [MouseListenerForward](), from: __return )
    }


    /// public synchronized void java.awt.TrayIcon.addMouseMotionListener(java.awt.event.MouseMotionListener)

    private static var addMouseMotionListener_MethodID_9: jmethodID?

    open func addMouseMotionListener( arg0: MouseMotionListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "addMouseMotionListener", methodSig: "(Ljava/awt/event/MouseMotionListener;)V", methodCache: &TrayIcon.addMouseMotionListener_MethodID_9, args: &__args, locals: &__locals )
    }

    open func addMouseMotionListener( _ _arg0: MouseMotionListener? ) {
        addMouseMotionListener( arg0: _arg0 )
    }

    /// public synchronized void java.awt.TrayIcon.removeMouseMotionListener(java.awt.event.MouseMotionListener)

    private static var removeMouseMotionListener_MethodID_10: jmethodID?

    open func removeMouseMotionListener( arg0: MouseMotionListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "removeMouseMotionListener", methodSig: "(Ljava/awt/event/MouseMotionListener;)V", methodCache: &TrayIcon.removeMouseMotionListener_MethodID_10, args: &__args, locals: &__locals )
    }

    open func removeMouseMotionListener( _ _arg0: MouseMotionListener? ) {
        removeMouseMotionListener( arg0: _arg0 )
    }

    /// public synchronized java.awt.event.MouseMotionListener[] java.awt.TrayIcon.getMouseMotionListeners()

    private static var getMouseMotionListeners_MethodID_11: jmethodID?

    open func getMouseMotionListeners() -> [MouseMotionListener]! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getMouseMotionListeners", methodSig: "()[Ljava/awt/event/MouseMotionListener;", methodCache: &TrayIcon.getMouseMotionListeners_MethodID_11, args: &__args, locals: &__locals )
        return JNIType.decode( type: [MouseMotionListenerForward](), from: __return )
    }


    /// public java.lang.String java.awt.TrayIcon.getActionCommand()

    private static var getActionCommand_MethodID_12: jmethodID?

    open func getActionCommand() -> String! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getActionCommand", methodSig: "()Ljava/lang/String;", methodCache: &TrayIcon.getActionCommand_MethodID_12, args: &__args, locals: &__locals )
        return JNIType.decode( type: String(), from: __return )
    }


    /// public void java.awt.TrayIcon.setActionCommand(java.lang.String)

    private static var setActionCommand_MethodID_13: jmethodID?

    open func setActionCommand( arg0: String? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setActionCommand", methodSig: "(Ljava/lang/String;)V", methodCache: &TrayIcon.setActionCommand_MethodID_13, args: &__args, locals: &__locals )
    }

    open func setActionCommand( _ _arg0: String? ) {
        setActionCommand( arg0: _arg0 )
    }

    /// public synchronized void java.awt.TrayIcon.addActionListener(java.awt.event.ActionListener)

    private static var addActionListener_MethodID_14: jmethodID?

    open func addActionListener( arg0: ActionListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "addActionListener", methodSig: "(Ljava/awt/event/ActionListener;)V", methodCache: &TrayIcon.addActionListener_MethodID_14, args: &__args, locals: &__locals )
    }

    open func addActionListener( _ _arg0: ActionListener? ) {
        addActionListener( arg0: _arg0 )
    }

    /// public synchronized void java.awt.TrayIcon.removeActionListener(java.awt.event.ActionListener)

    private static var removeActionListener_MethodID_15: jmethodID?

    open func removeActionListener( arg0: ActionListener? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "removeActionListener", methodSig: "(Ljava/awt/event/ActionListener;)V", methodCache: &TrayIcon.removeActionListener_MethodID_15, args: &__args, locals: &__locals )
    }

    open func removeActionListener( _ _arg0: ActionListener? ) {
        removeActionListener( arg0: _arg0 )
    }

    /// public synchronized java.awt.event.ActionListener[] java.awt.TrayIcon.getActionListeners()

    private static var getActionListeners_MethodID_16: jmethodID?

    open func getActionListeners() -> [ActionListener]! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getActionListeners", methodSig: "()[Ljava/awt/event/ActionListener;", methodCache: &TrayIcon.getActionListeners_MethodID_16, args: &__args, locals: &__locals )
        return JNIType.decode( type: [ActionListenerForward](), from: __return )
    }


    /// void java.awt.TrayIcon.processActionEvent(java.awt.event.ActionEvent)

    /// public void java.awt.TrayIcon.setImage(java.awt.Image)

    private static var setImage_MethodID_17: jmethodID?

    open func setImage( arg0: Image? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setImage", methodSig: "(Ljava/awt/Image;)V", methodCache: &TrayIcon.setImage_MethodID_17, args: &__args, locals: &__locals )
    }

    open func setImage( _ _arg0: Image? ) {
        setImage( arg0: _arg0 )
    }

    /// public void java.awt.TrayIcon.setPopupMenu(java.awt.PopupMenu)

    private static var setPopupMenu_MethodID_18: jmethodID?

    open func setPopupMenu( arg0: PopupMenu? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setPopupMenu", methodSig: "(Ljava/awt/PopupMenu;)V", methodCache: &TrayIcon.setPopupMenu_MethodID_18, args: &__args, locals: &__locals )
    }

    open func setPopupMenu( _ _arg0: PopupMenu? ) {
        setPopupMenu( arg0: _arg0 )
    }

    /// public java.awt.PopupMenu java.awt.TrayIcon.getPopupMenu()

    private static var getPopupMenu_MethodID_19: jmethodID?

    open func getPopupMenu() -> PopupMenu! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getPopupMenu", methodSig: "()Ljava/awt/PopupMenu;", methodCache: &TrayIcon.getPopupMenu_MethodID_19, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? PopupMenu( javaObject: __return ) : nil
    }


    /// public void java.awt.TrayIcon.setToolTip(java.lang.String)

    private static var setToolTip_MethodID_20: jmethodID?

    open func setToolTip( arg0: String? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setToolTip", methodSig: "(Ljava/lang/String;)V", methodCache: &TrayIcon.setToolTip_MethodID_20, args: &__args, locals: &__locals )
    }

    open func setToolTip( _ _arg0: String? ) {
        setToolTip( arg0: _arg0 )
    }

    /// public java.lang.String java.awt.TrayIcon.getToolTip()

    private static var getToolTip_MethodID_21: jmethodID?

    open func getToolTip() -> String! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getToolTip", methodSig: "()Ljava/lang/String;", methodCache: &TrayIcon.getToolTip_MethodID_21, args: &__args, locals: &__locals )
        return JNIType.decode( type: String(), from: __return )
    }


    /// public void java.awt.TrayIcon.setImageAutoSize(boolean)

    private static var setImageAutoSize_MethodID_22: jmethodID?

    open func setImageAutoSize( arg0: Bool ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setImageAutoSize", methodSig: "(Z)V", methodCache: &TrayIcon.setImageAutoSize_MethodID_22, args: &__args, locals: &__locals )
    }

    open func setImageAutoSize( _ _arg0: Bool ) {
        setImageAutoSize( arg0: _arg0 )
    }

    /// public boolean java.awt.TrayIcon.isImageAutoSize()

    private static var isImageAutoSize_MethodID_23: jmethodID?

    open func isImageAutoSize() -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isImageAutoSize", methodSig: "()Z", methodCache: &TrayIcon.isImageAutoSize_MethodID_23, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }


    /// public void java.awt.TrayIcon.displayMessage(java.lang.String,java.lang.String,java.awt.TrayIcon$MessageType)

    private static var displayMessage_MethodID_24: jmethodID?

    open func displayMessage( arg0: String?, arg1: String?, arg2: TrayIcon_MessageType? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 3 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "displayMessage", methodSig: "(Ljava/lang/String;Ljava/lang/String;Ljava/awt/TrayIcon$MessageType;)V", methodCache: &TrayIcon.displayMessage_MethodID_24, args: &__args, locals: &__locals )
    }

    open func displayMessage( _ _arg0: String?, _ _arg1: String?, _ _arg2: TrayIcon_MessageType? ) {
        displayMessage( arg0: _arg0, arg1: _arg1, arg2: _arg2 )
    }

}
