
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:22 GMT 2016 ///

/// class java.awt.font.ImageGraphicAttribute ///

open class ImageGraphicAttribute: GraphicAttribute {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.font.ImageGraphicAttribute", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var ImageGraphicAttributeJNIClass: jclass?

    /// private java.awt.Image java.awt.font.ImageGraphicAttribute.fImage

    /// private float java.awt.font.ImageGraphicAttribute.fImageWidth

    /// private float java.awt.font.ImageGraphicAttribute.fImageHeight

    /// private float java.awt.font.ImageGraphicAttribute.fOriginX

    /// private float java.awt.font.ImageGraphicAttribute.fOriginY

    /// private int java.awt.font.GraphicAttribute.fAlignment

    /// public static final int java.awt.font.GraphicAttribute.TOP_ALIGNMENT

    /// public static final int java.awt.font.GraphicAttribute.BOTTOM_ALIGNMENT

    /// public static final int java.awt.font.GraphicAttribute.ROMAN_BASELINE

    /// public static final int java.awt.font.GraphicAttribute.CENTER_BASELINE

    /// public static final int java.awt.font.GraphicAttribute.HANGING_BASELINE

    /// public java.awt.font.ImageGraphicAttribute(java.awt.Image,int)

    private static var new_MethodID_1: jmethodID?

    public convenience init( arg0: Image?, arg1: Int ) {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/font/ImageGraphicAttribute", classCache: &ImageGraphicAttribute.ImageGraphicAttributeJNIClass, methodSig: "(Ljava/awt/Image;I)V", methodCache: &ImageGraphicAttribute.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Image?, _ _arg1: Int ) {
        self.init( arg0: _arg0, arg1: _arg1 )
    }

    /// public java.awt.font.ImageGraphicAttribute(java.awt.Image,int,float,float)

    private static var new_MethodID_2: jmethodID?

    public convenience init( arg0: Image?, arg1: Int, arg2: Float, arg3: Float ) {
        var __args = [jvalue]( repeating: jvalue(), count: 4 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        __args[3] = JNIType.encode( value: arg3, locals: &__locals )
        let __object = JNIMethod.NewObject( className: "java/awt/font/ImageGraphicAttribute", classCache: &ImageGraphicAttribute.ImageGraphicAttributeJNIClass, methodSig: "(Ljava/awt/Image;IFF)V", methodCache: &ImageGraphicAttribute.new_MethodID_2, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    public convenience init( _ _arg0: Image?, _ _arg1: Int, _ _arg2: Float, _ _arg3: Float ) {
        self.init( arg0: _arg0, arg1: _arg1, arg2: _arg2, arg3: _arg3 )
    }

    /// public boolean java.awt.font.ImageGraphicAttribute.equals(java.awt.font.ImageGraphicAttribute)

    private static var equals_MethodID_3: jmethodID?

    open func equals( arg0: ImageGraphicAttribute? ) -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "equals", methodSig: "(Ljava/awt/font/ImageGraphicAttribute;)Z", methodCache: &ImageGraphicAttribute.equals_MethodID_3, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }

    open func equals( _ _arg0: ImageGraphicAttribute? ) -> Bool {
        return equals( arg0: _arg0 )
    }

    /// public boolean java.awt.font.ImageGraphicAttribute.equals(java.lang.Object)

    /// public int java.awt.font.ImageGraphicAttribute.hashCode()

    /// public java.awt.geom.Rectangle2D java.awt.font.ImageGraphicAttribute.getBounds()

    /// public float java.awt.font.ImageGraphicAttribute.getAscent()

    /// public float java.awt.font.ImageGraphicAttribute.getDescent()

    /// public float java.awt.font.ImageGraphicAttribute.getAdvance()

    /// public void java.awt.font.ImageGraphicAttribute.draw(java.awt.Graphics2D,float,float)

}
