
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.awt.image.TileObserver ///

public protocol TileObserver: JavaProtocol {

    /// public abstract void java.awt.image.TileObserver.tileUpdate(java.awt.image.WritableRenderedImage,int,int,boolean)

    func tileUpdate( source: WritableRenderedImage?, tileX: Int, tileY: Int, willBeWritable: Bool )

}


open class TileObserverForward: JNIObjectForward, TileObserver {

    private static var TileObserverJNIClass: jclass?

    /// public abstract void java.awt.image.TileObserver.tileUpdate(java.awt.image.WritableRenderedImage,int,int,boolean)

    private static var tileUpdate_MethodID_2: jmethodID?

    open func tileUpdate( source: WritableRenderedImage?, tileX: Int, tileY: Int, willBeWritable: Bool ) {
        var __args = [jvalue]( repeating: jvalue(), count: 4 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: source, locals: &__locals )
        __args[1] = JNIType.toJava( value: tileX, locals: &__locals )
        __args[2] = JNIType.toJava( value: tileY, locals: &__locals )
        __args[3] = JNIType.toJava( value: willBeWritable, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "tileUpdate", methodSig: "(Ljava/awt/image/WritableRenderedImage;IIZ)V", methodCache: &TileObserverForward.tileUpdate_MethodID_2, args: &__args, locals: &__locals )
    }

    open func tileUpdate( _ _source: WritableRenderedImage?, _ _tileX: Int, _ _tileY: Int, _ _willBeWritable: Bool ) {
        tileUpdate( source: _source, tileX: _tileX, tileY: _tileY, willBeWritable: _willBeWritable )
    }

}


