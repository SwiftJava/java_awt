
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:42 GMT 2016 ///

/// interface java.awt.image.ImageProducer ///

public protocol ImageProducer: JavaProtocol {

    /// public abstract void java.awt.image.ImageProducer.addConsumer(java.awt.image.ImageConsumer)

    func addConsumer( arg0: ImageConsumer? )
    func addConsumer( _ _arg0: ImageConsumer? )

    /// public abstract boolean java.awt.image.ImageProducer.isConsumer(java.awt.image.ImageConsumer)

    func isConsumer( arg0: ImageConsumer? ) -> Bool
    func isConsumer( _ _arg0: ImageConsumer? ) -> Bool

    /// public abstract void java.awt.image.ImageProducer.removeConsumer(java.awt.image.ImageConsumer)

    func removeConsumer( arg0: ImageConsumer? )
    func removeConsumer( _ _arg0: ImageConsumer? )

    /// public abstract void java.awt.image.ImageProducer.startProduction(java.awt.image.ImageConsumer)

    func startProduction( arg0: ImageConsumer? )
    func startProduction( _ _arg0: ImageConsumer? )

    /// public abstract void java.awt.image.ImageProducer.requestTopDownLeftRightResend(java.awt.image.ImageConsumer)

    func requestTopDownLeftRightResend( arg0: ImageConsumer? )
    func requestTopDownLeftRightResend( _ _arg0: ImageConsumer? )

}

open class ImageProducerForward: JNIObjectForward, ImageProducer {

    private static var ImageProducerJNIClass: jclass?

    /// public abstract void java.awt.image.ImageProducer.addConsumer(java.awt.image.ImageConsumer)

    private static var addConsumer_MethodID_6: jmethodID?

    open func addConsumer( arg0: ImageConsumer? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "addConsumer", methodSig: "(Ljava/awt/image/ImageConsumer;)V", methodCache: &ImageProducerForward.addConsumer_MethodID_6, args: &__args, locals: &__locals )
    }

    open func addConsumer( _ _arg0: ImageConsumer? ) {
        addConsumer( arg0: _arg0 )
    }

    /// public abstract boolean java.awt.image.ImageProducer.isConsumer(java.awt.image.ImageConsumer)

    private static var isConsumer_MethodID_7: jmethodID?

    open func isConsumer( arg0: ImageConsumer? ) -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "isConsumer", methodSig: "(Ljava/awt/image/ImageConsumer;)Z", methodCache: &ImageProducerForward.isConsumer_MethodID_7, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }

    open func isConsumer( _ _arg0: ImageConsumer? ) -> Bool {
        return isConsumer( arg0: _arg0 )
    }

    /// public abstract void java.awt.image.ImageProducer.removeConsumer(java.awt.image.ImageConsumer)

    private static var removeConsumer_MethodID_8: jmethodID?

    open func removeConsumer( arg0: ImageConsumer? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "removeConsumer", methodSig: "(Ljava/awt/image/ImageConsumer;)V", methodCache: &ImageProducerForward.removeConsumer_MethodID_8, args: &__args, locals: &__locals )
    }

    open func removeConsumer( _ _arg0: ImageConsumer? ) {
        removeConsumer( arg0: _arg0 )
    }

    /// public abstract void java.awt.image.ImageProducer.startProduction(java.awt.image.ImageConsumer)

    private static var startProduction_MethodID_9: jmethodID?

    open func startProduction( arg0: ImageConsumer? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "startProduction", methodSig: "(Ljava/awt/image/ImageConsumer;)V", methodCache: &ImageProducerForward.startProduction_MethodID_9, args: &__args, locals: &__locals )
    }

    open func startProduction( _ _arg0: ImageConsumer? ) {
        startProduction( arg0: _arg0 )
    }

    /// public abstract void java.awt.image.ImageProducer.requestTopDownLeftRightResend(java.awt.image.ImageConsumer)

    private static var requestTopDownLeftRightResend_MethodID_10: jmethodID?

    open func requestTopDownLeftRightResend( arg0: ImageConsumer? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "requestTopDownLeftRightResend", methodSig: "(Ljava/awt/image/ImageConsumer;)V", methodCache: &ImageProducerForward.requestTopDownLeftRightResend_MethodID_10, args: &__args, locals: &__locals )
    }

    open func requestTopDownLeftRightResend( _ _arg0: ImageConsumer? ) {
        requestTopDownLeftRightResend( arg0: _arg0 )
    }

}


