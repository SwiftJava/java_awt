
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:28 GMT 2016 ///

/// class java.awt.geom.Ellipse2D ///

open class Ellipse2D: RectangularShape {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.geom.Ellipse2D", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var Ellipse2DJNIClass: jclass?

    /// protected java.awt.geom.Ellipse2D()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/geom/Ellipse2D", classCache: &Ellipse2D.Ellipse2DJNIClass, methodSig: "()V", methodCache: &Ellipse2D.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public boolean java.awt.geom.Ellipse2D.equals(java.lang.Object)

    /// public int java.awt.geom.Ellipse2D.hashCode()

    /// public boolean java.awt.geom.Ellipse2D.contains(double,double)

    /// public boolean java.awt.geom.Ellipse2D.contains(double,double,double,double)

    /// public boolean java.awt.geom.Ellipse2D.intersects(double,double,double,double)

    /// public java.awt.geom.PathIterator java.awt.geom.Ellipse2D.getPathIterator(java.awt.geom.AffineTransform)

}
