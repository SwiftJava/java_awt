
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.awt.color.ICC_Profile ///

open class ICC_Profile: java_swift.JavaObject, /* java.io.Serializable */ UnclassedProtocol {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var ICC_ProfileJNIClass: jclass?

    /// private static final long java.awt.color.ICC_Profile.serialVersionUID

    /// private transient sun.java2d.cmm.Profile java.awt.color.ICC_Profile.cmmProfile

    /// private transient sun.java2d.cmm.ProfileDeferralInfo java.awt.color.ICC_Profile.deferralInfo

    /// private transient sun.java2d.cmm.ProfileActivator java.awt.color.ICC_Profile.profileActivator

    /// private static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.sRGBprofile

    /// private static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.XYZprofile

    /// private static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.PYCCprofile

    /// private static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.GRAYprofile

    /// private static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.LINEAR_RGBprofile

    /// public static final int java.awt.color.ICC_Profile.CLASS_INPUT

    private static var CLASS_INPUT_FieldID: jfieldID?

    open static var CLASS_INPUT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLASS_INPUT", fieldType: "I", fieldCache: &CLASS_INPUT_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.CLASS_DISPLAY

    private static var CLASS_DISPLAY_FieldID: jfieldID?

    open static var CLASS_DISPLAY: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLASS_DISPLAY", fieldType: "I", fieldCache: &CLASS_DISPLAY_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.CLASS_OUTPUT

    private static var CLASS_OUTPUT_FieldID: jfieldID?

    open static var CLASS_OUTPUT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLASS_OUTPUT", fieldType: "I", fieldCache: &CLASS_OUTPUT_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.CLASS_DEVICELINK

    private static var CLASS_DEVICELINK_FieldID: jfieldID?

    open static var CLASS_DEVICELINK: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLASS_DEVICELINK", fieldType: "I", fieldCache: &CLASS_DEVICELINK_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.CLASS_COLORSPACECONVERSION

    private static var CLASS_COLORSPACECONVERSION_FieldID: jfieldID?

    open static var CLASS_COLORSPACECONVERSION: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLASS_COLORSPACECONVERSION", fieldType: "I", fieldCache: &CLASS_COLORSPACECONVERSION_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.CLASS_ABSTRACT

    private static var CLASS_ABSTRACT_FieldID: jfieldID?

    open static var CLASS_ABSTRACT: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLASS_ABSTRACT", fieldType: "I", fieldCache: &CLASS_ABSTRACT_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.CLASS_NAMEDCOLOR

    private static var CLASS_NAMEDCOLOR_FieldID: jfieldID?

    open static var CLASS_NAMEDCOLOR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "CLASS_NAMEDCOLOR", fieldType: "I", fieldCache: &CLASS_NAMEDCOLOR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigXYZData

    private static var icSigXYZData_FieldID: jfieldID?

    open static var icSigXYZData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigXYZData", fieldType: "I", fieldCache: &icSigXYZData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigLabData

    private static var icSigLabData_FieldID: jfieldID?

    open static var icSigLabData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigLabData", fieldType: "I", fieldCache: &icSigLabData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigLuvData

    private static var icSigLuvData_FieldID: jfieldID?

    open static var icSigLuvData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigLuvData", fieldType: "I", fieldCache: &icSigLuvData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigYCbCrData

    private static var icSigYCbCrData_FieldID: jfieldID?

    open static var icSigYCbCrData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigYCbCrData", fieldType: "I", fieldCache: &icSigYCbCrData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigYxyData

    private static var icSigYxyData_FieldID: jfieldID?

    open static var icSigYxyData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigYxyData", fieldType: "I", fieldCache: &icSigYxyData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigRgbData

    private static var icSigRgbData_FieldID: jfieldID?

    open static var icSigRgbData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigRgbData", fieldType: "I", fieldCache: &icSigRgbData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigGrayData

    private static var icSigGrayData_FieldID: jfieldID?

    open static var icSigGrayData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigGrayData", fieldType: "I", fieldCache: &icSigGrayData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigHsvData

    private static var icSigHsvData_FieldID: jfieldID?

    open static var icSigHsvData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigHsvData", fieldType: "I", fieldCache: &icSigHsvData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigHlsData

    private static var icSigHlsData_FieldID: jfieldID?

    open static var icSigHlsData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigHlsData", fieldType: "I", fieldCache: &icSigHlsData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigCmykData

    private static var icSigCmykData_FieldID: jfieldID?

    open static var icSigCmykData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigCmykData", fieldType: "I", fieldCache: &icSigCmykData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigCmyData

    private static var icSigCmyData_FieldID: jfieldID?

    open static var icSigCmyData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigCmyData", fieldType: "I", fieldCache: &icSigCmyData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace2CLR

    private static var icSigSpace2CLR_FieldID: jfieldID?

    open static var icSigSpace2CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace2CLR", fieldType: "I", fieldCache: &icSigSpace2CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace3CLR

    private static var icSigSpace3CLR_FieldID: jfieldID?

    open static var icSigSpace3CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace3CLR", fieldType: "I", fieldCache: &icSigSpace3CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace4CLR

    private static var icSigSpace4CLR_FieldID: jfieldID?

    open static var icSigSpace4CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace4CLR", fieldType: "I", fieldCache: &icSigSpace4CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace5CLR

    private static var icSigSpace5CLR_FieldID: jfieldID?

    open static var icSigSpace5CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace5CLR", fieldType: "I", fieldCache: &icSigSpace5CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace6CLR

    private static var icSigSpace6CLR_FieldID: jfieldID?

    open static var icSigSpace6CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace6CLR", fieldType: "I", fieldCache: &icSigSpace6CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace7CLR

    private static var icSigSpace7CLR_FieldID: jfieldID?

    open static var icSigSpace7CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace7CLR", fieldType: "I", fieldCache: &icSigSpace7CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace8CLR

    private static var icSigSpace8CLR_FieldID: jfieldID?

    open static var icSigSpace8CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace8CLR", fieldType: "I", fieldCache: &icSigSpace8CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpace9CLR

    private static var icSigSpace9CLR_FieldID: jfieldID?

    open static var icSigSpace9CLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpace9CLR", fieldType: "I", fieldCache: &icSigSpace9CLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpaceACLR

    private static var icSigSpaceACLR_FieldID: jfieldID?

    open static var icSigSpaceACLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpaceACLR", fieldType: "I", fieldCache: &icSigSpaceACLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpaceBCLR

    private static var icSigSpaceBCLR_FieldID: jfieldID?

    open static var icSigSpaceBCLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpaceBCLR", fieldType: "I", fieldCache: &icSigSpaceBCLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpaceCCLR

    private static var icSigSpaceCCLR_FieldID: jfieldID?

    open static var icSigSpaceCCLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpaceCCLR", fieldType: "I", fieldCache: &icSigSpaceCCLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpaceDCLR

    private static var icSigSpaceDCLR_FieldID: jfieldID?

    open static var icSigSpaceDCLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpaceDCLR", fieldType: "I", fieldCache: &icSigSpaceDCLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpaceECLR

    private static var icSigSpaceECLR_FieldID: jfieldID?

    open static var icSigSpaceECLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpaceECLR", fieldType: "I", fieldCache: &icSigSpaceECLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigSpaceFCLR

    private static var icSigSpaceFCLR_FieldID: jfieldID?

    open static var icSigSpaceFCLR: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigSpaceFCLR", fieldType: "I", fieldCache: &icSigSpaceFCLR_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigInputClass

    private static var icSigInputClass_FieldID: jfieldID?

    open static var icSigInputClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigInputClass", fieldType: "I", fieldCache: &icSigInputClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigDisplayClass

    private static var icSigDisplayClass_FieldID: jfieldID?

    open static var icSigDisplayClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigDisplayClass", fieldType: "I", fieldCache: &icSigDisplayClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigOutputClass

    private static var icSigOutputClass_FieldID: jfieldID?

    open static var icSigOutputClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigOutputClass", fieldType: "I", fieldCache: &icSigOutputClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigLinkClass

    private static var icSigLinkClass_FieldID: jfieldID?

    open static var icSigLinkClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigLinkClass", fieldType: "I", fieldCache: &icSigLinkClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigAbstractClass

    private static var icSigAbstractClass_FieldID: jfieldID?

    open static var icSigAbstractClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigAbstractClass", fieldType: "I", fieldCache: &icSigAbstractClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigColorSpaceClass

    private static var icSigColorSpaceClass_FieldID: jfieldID?

    open static var icSigColorSpaceClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigColorSpaceClass", fieldType: "I", fieldCache: &icSigColorSpaceClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigNamedColorClass

    private static var icSigNamedColorClass_FieldID: jfieldID?

    open static var icSigNamedColorClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigNamedColorClass", fieldType: "I", fieldCache: &icSigNamedColorClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icPerceptual

    private static var icPerceptual_FieldID: jfieldID?

    open static var icPerceptual: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icPerceptual", fieldType: "I", fieldCache: &icPerceptual_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icRelativeColorimetric

    private static var icRelativeColorimetric_FieldID: jfieldID?

    open static var icRelativeColorimetric: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icRelativeColorimetric", fieldType: "I", fieldCache: &icRelativeColorimetric_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icMediaRelativeColorimetric

    private static var icMediaRelativeColorimetric_FieldID: jfieldID?

    open static var icMediaRelativeColorimetric: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icMediaRelativeColorimetric", fieldType: "I", fieldCache: &icMediaRelativeColorimetric_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSaturation

    private static var icSaturation_FieldID: jfieldID?

    open static var icSaturation: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSaturation", fieldType: "I", fieldCache: &icSaturation_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icAbsoluteColorimetric

    private static var icAbsoluteColorimetric_FieldID: jfieldID?

    open static var icAbsoluteColorimetric: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icAbsoluteColorimetric", fieldType: "I", fieldCache: &icAbsoluteColorimetric_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icICCAbsoluteColorimetric

    private static var icICCAbsoluteColorimetric_FieldID: jfieldID?

    open static var icICCAbsoluteColorimetric: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icICCAbsoluteColorimetric", fieldType: "I", fieldCache: &icICCAbsoluteColorimetric_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigHead

    private static var icSigHead_FieldID: jfieldID?

    open static var icSigHead: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigHead", fieldType: "I", fieldCache: &icSigHead_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigAToB0Tag

    private static var icSigAToB0Tag_FieldID: jfieldID?

    open static var icSigAToB0Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigAToB0Tag", fieldType: "I", fieldCache: &icSigAToB0Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigAToB1Tag

    private static var icSigAToB1Tag_FieldID: jfieldID?

    open static var icSigAToB1Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigAToB1Tag", fieldType: "I", fieldCache: &icSigAToB1Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigAToB2Tag

    private static var icSigAToB2Tag_FieldID: jfieldID?

    open static var icSigAToB2Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigAToB2Tag", fieldType: "I", fieldCache: &icSigAToB2Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigBlueColorantTag

    private static var icSigBlueColorantTag_FieldID: jfieldID?

    open static var icSigBlueColorantTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigBlueColorantTag", fieldType: "I", fieldCache: &icSigBlueColorantTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigBlueMatrixColumnTag

    private static var icSigBlueMatrixColumnTag_FieldID: jfieldID?

    open static var icSigBlueMatrixColumnTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigBlueMatrixColumnTag", fieldType: "I", fieldCache: &icSigBlueMatrixColumnTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigBlueTRCTag

    private static var icSigBlueTRCTag_FieldID: jfieldID?

    open static var icSigBlueTRCTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigBlueTRCTag", fieldType: "I", fieldCache: &icSigBlueTRCTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigBToA0Tag

    private static var icSigBToA0Tag_FieldID: jfieldID?

    open static var icSigBToA0Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigBToA0Tag", fieldType: "I", fieldCache: &icSigBToA0Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigBToA1Tag

    private static var icSigBToA1Tag_FieldID: jfieldID?

    open static var icSigBToA1Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigBToA1Tag", fieldType: "I", fieldCache: &icSigBToA1Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigBToA2Tag

    private static var icSigBToA2Tag_FieldID: jfieldID?

    open static var icSigBToA2Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigBToA2Tag", fieldType: "I", fieldCache: &icSigBToA2Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigCalibrationDateTimeTag

    private static var icSigCalibrationDateTimeTag_FieldID: jfieldID?

    open static var icSigCalibrationDateTimeTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigCalibrationDateTimeTag", fieldType: "I", fieldCache: &icSigCalibrationDateTimeTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigCharTargetTag

    private static var icSigCharTargetTag_FieldID: jfieldID?

    open static var icSigCharTargetTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigCharTargetTag", fieldType: "I", fieldCache: &icSigCharTargetTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigCopyrightTag

    private static var icSigCopyrightTag_FieldID: jfieldID?

    open static var icSigCopyrightTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigCopyrightTag", fieldType: "I", fieldCache: &icSigCopyrightTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigCrdInfoTag

    private static var icSigCrdInfoTag_FieldID: jfieldID?

    open static var icSigCrdInfoTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigCrdInfoTag", fieldType: "I", fieldCache: &icSigCrdInfoTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigDeviceMfgDescTag

    private static var icSigDeviceMfgDescTag_FieldID: jfieldID?

    open static var icSigDeviceMfgDescTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigDeviceMfgDescTag", fieldType: "I", fieldCache: &icSigDeviceMfgDescTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigDeviceModelDescTag

    private static var icSigDeviceModelDescTag_FieldID: jfieldID?

    open static var icSigDeviceModelDescTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigDeviceModelDescTag", fieldType: "I", fieldCache: &icSigDeviceModelDescTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigDeviceSettingsTag

    private static var icSigDeviceSettingsTag_FieldID: jfieldID?

    open static var icSigDeviceSettingsTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigDeviceSettingsTag", fieldType: "I", fieldCache: &icSigDeviceSettingsTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigGamutTag

    private static var icSigGamutTag_FieldID: jfieldID?

    open static var icSigGamutTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigGamutTag", fieldType: "I", fieldCache: &icSigGamutTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigGrayTRCTag

    private static var icSigGrayTRCTag_FieldID: jfieldID?

    open static var icSigGrayTRCTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigGrayTRCTag", fieldType: "I", fieldCache: &icSigGrayTRCTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigGreenColorantTag

    private static var icSigGreenColorantTag_FieldID: jfieldID?

    open static var icSigGreenColorantTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigGreenColorantTag", fieldType: "I", fieldCache: &icSigGreenColorantTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigGreenMatrixColumnTag

    private static var icSigGreenMatrixColumnTag_FieldID: jfieldID?

    open static var icSigGreenMatrixColumnTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigGreenMatrixColumnTag", fieldType: "I", fieldCache: &icSigGreenMatrixColumnTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigGreenTRCTag

    private static var icSigGreenTRCTag_FieldID: jfieldID?

    open static var icSigGreenTRCTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigGreenTRCTag", fieldType: "I", fieldCache: &icSigGreenTRCTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigLuminanceTag

    private static var icSigLuminanceTag_FieldID: jfieldID?

    open static var icSigLuminanceTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigLuminanceTag", fieldType: "I", fieldCache: &icSigLuminanceTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigMeasurementTag

    private static var icSigMeasurementTag_FieldID: jfieldID?

    open static var icSigMeasurementTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigMeasurementTag", fieldType: "I", fieldCache: &icSigMeasurementTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigMediaBlackPointTag

    private static var icSigMediaBlackPointTag_FieldID: jfieldID?

    open static var icSigMediaBlackPointTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigMediaBlackPointTag", fieldType: "I", fieldCache: &icSigMediaBlackPointTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigMediaWhitePointTag

    private static var icSigMediaWhitePointTag_FieldID: jfieldID?

    open static var icSigMediaWhitePointTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigMediaWhitePointTag", fieldType: "I", fieldCache: &icSigMediaWhitePointTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigNamedColor2Tag

    private static var icSigNamedColor2Tag_FieldID: jfieldID?

    open static var icSigNamedColor2Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigNamedColor2Tag", fieldType: "I", fieldCache: &icSigNamedColor2Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigOutputResponseTag

    private static var icSigOutputResponseTag_FieldID: jfieldID?

    open static var icSigOutputResponseTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigOutputResponseTag", fieldType: "I", fieldCache: &icSigOutputResponseTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPreview0Tag

    private static var icSigPreview0Tag_FieldID: jfieldID?

    open static var icSigPreview0Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPreview0Tag", fieldType: "I", fieldCache: &icSigPreview0Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPreview1Tag

    private static var icSigPreview1Tag_FieldID: jfieldID?

    open static var icSigPreview1Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPreview1Tag", fieldType: "I", fieldCache: &icSigPreview1Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPreview2Tag

    private static var icSigPreview2Tag_FieldID: jfieldID?

    open static var icSigPreview2Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPreview2Tag", fieldType: "I", fieldCache: &icSigPreview2Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigProfileDescriptionTag

    private static var icSigProfileDescriptionTag_FieldID: jfieldID?

    open static var icSigProfileDescriptionTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigProfileDescriptionTag", fieldType: "I", fieldCache: &icSigProfileDescriptionTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigProfileSequenceDescTag

    private static var icSigProfileSequenceDescTag_FieldID: jfieldID?

    open static var icSigProfileSequenceDescTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigProfileSequenceDescTag", fieldType: "I", fieldCache: &icSigProfileSequenceDescTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPs2CRD0Tag

    private static var icSigPs2CRD0Tag_FieldID: jfieldID?

    open static var icSigPs2CRD0Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPs2CRD0Tag", fieldType: "I", fieldCache: &icSigPs2CRD0Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPs2CRD1Tag

    private static var icSigPs2CRD1Tag_FieldID: jfieldID?

    open static var icSigPs2CRD1Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPs2CRD1Tag", fieldType: "I", fieldCache: &icSigPs2CRD1Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPs2CRD2Tag

    private static var icSigPs2CRD2Tag_FieldID: jfieldID?

    open static var icSigPs2CRD2Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPs2CRD2Tag", fieldType: "I", fieldCache: &icSigPs2CRD2Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPs2CRD3Tag

    private static var icSigPs2CRD3Tag_FieldID: jfieldID?

    open static var icSigPs2CRD3Tag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPs2CRD3Tag", fieldType: "I", fieldCache: &icSigPs2CRD3Tag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPs2CSATag

    private static var icSigPs2CSATag_FieldID: jfieldID?

    open static var icSigPs2CSATag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPs2CSATag", fieldType: "I", fieldCache: &icSigPs2CSATag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigPs2RenderingIntentTag

    private static var icSigPs2RenderingIntentTag_FieldID: jfieldID?

    open static var icSigPs2RenderingIntentTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigPs2RenderingIntentTag", fieldType: "I", fieldCache: &icSigPs2RenderingIntentTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigRedColorantTag

    private static var icSigRedColorantTag_FieldID: jfieldID?

    open static var icSigRedColorantTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigRedColorantTag", fieldType: "I", fieldCache: &icSigRedColorantTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigRedMatrixColumnTag

    private static var icSigRedMatrixColumnTag_FieldID: jfieldID?

    open static var icSigRedMatrixColumnTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigRedMatrixColumnTag", fieldType: "I", fieldCache: &icSigRedMatrixColumnTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigRedTRCTag

    private static var icSigRedTRCTag_FieldID: jfieldID?

    open static var icSigRedTRCTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigRedTRCTag", fieldType: "I", fieldCache: &icSigRedTRCTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigScreeningDescTag

    private static var icSigScreeningDescTag_FieldID: jfieldID?

    open static var icSigScreeningDescTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigScreeningDescTag", fieldType: "I", fieldCache: &icSigScreeningDescTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigScreeningTag

    private static var icSigScreeningTag_FieldID: jfieldID?

    open static var icSigScreeningTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigScreeningTag", fieldType: "I", fieldCache: &icSigScreeningTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigTechnologyTag

    private static var icSigTechnologyTag_FieldID: jfieldID?

    open static var icSigTechnologyTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigTechnologyTag", fieldType: "I", fieldCache: &icSigTechnologyTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigUcrBgTag

    private static var icSigUcrBgTag_FieldID: jfieldID?

    open static var icSigUcrBgTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigUcrBgTag", fieldType: "I", fieldCache: &icSigUcrBgTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigViewingCondDescTag

    private static var icSigViewingCondDescTag_FieldID: jfieldID?

    open static var icSigViewingCondDescTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigViewingCondDescTag", fieldType: "I", fieldCache: &icSigViewingCondDescTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigViewingConditionsTag

    private static var icSigViewingConditionsTag_FieldID: jfieldID?

    open static var icSigViewingConditionsTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigViewingConditionsTag", fieldType: "I", fieldCache: &icSigViewingConditionsTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigChromaticityTag

    private static var icSigChromaticityTag_FieldID: jfieldID?

    open static var icSigChromaticityTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigChromaticityTag", fieldType: "I", fieldCache: &icSigChromaticityTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigChromaticAdaptationTag

    private static var icSigChromaticAdaptationTag_FieldID: jfieldID?

    open static var icSigChromaticAdaptationTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigChromaticAdaptationTag", fieldType: "I", fieldCache: &icSigChromaticAdaptationTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigColorantOrderTag

    private static var icSigColorantOrderTag_FieldID: jfieldID?

    open static var icSigColorantOrderTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigColorantOrderTag", fieldType: "I", fieldCache: &icSigColorantOrderTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icSigColorantTableTag

    private static var icSigColorantTableTag_FieldID: jfieldID?

    open static var icSigColorantTableTag: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icSigColorantTableTag", fieldType: "I", fieldCache: &icSigColorantTableTag_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrSize

    private static var icHdrSize_FieldID: jfieldID?

    open static var icHdrSize: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrSize", fieldType: "I", fieldCache: &icHdrSize_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrCmmId

    private static var icHdrCmmId_FieldID: jfieldID?

    open static var icHdrCmmId: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrCmmId", fieldType: "I", fieldCache: &icHdrCmmId_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrVersion

    private static var icHdrVersion_FieldID: jfieldID?

    open static var icHdrVersion: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrVersion", fieldType: "I", fieldCache: &icHdrVersion_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrDeviceClass

    private static var icHdrDeviceClass_FieldID: jfieldID?

    open static var icHdrDeviceClass: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrDeviceClass", fieldType: "I", fieldCache: &icHdrDeviceClass_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrColorSpace

    private static var icHdrColorSpace_FieldID: jfieldID?

    open static var icHdrColorSpace: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrColorSpace", fieldType: "I", fieldCache: &icHdrColorSpace_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrPcs

    private static var icHdrPcs_FieldID: jfieldID?

    open static var icHdrPcs: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrPcs", fieldType: "I", fieldCache: &icHdrPcs_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrDate

    private static var icHdrDate_FieldID: jfieldID?

    open static var icHdrDate: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrDate", fieldType: "I", fieldCache: &icHdrDate_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrMagic

    private static var icHdrMagic_FieldID: jfieldID?

    open static var icHdrMagic: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrMagic", fieldType: "I", fieldCache: &icHdrMagic_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrPlatform

    private static var icHdrPlatform_FieldID: jfieldID?

    open static var icHdrPlatform: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrPlatform", fieldType: "I", fieldCache: &icHdrPlatform_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrFlags

    private static var icHdrFlags_FieldID: jfieldID?

    open static var icHdrFlags: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrFlags", fieldType: "I", fieldCache: &icHdrFlags_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrManufacturer

    private static var icHdrManufacturer_FieldID: jfieldID?

    open static var icHdrManufacturer: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrManufacturer", fieldType: "I", fieldCache: &icHdrManufacturer_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrModel

    private static var icHdrModel_FieldID: jfieldID?

    open static var icHdrModel: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrModel", fieldType: "I", fieldCache: &icHdrModel_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrAttributes

    private static var icHdrAttributes_FieldID: jfieldID?

    open static var icHdrAttributes: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrAttributes", fieldType: "I", fieldCache: &icHdrAttributes_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrRenderingIntent

    private static var icHdrRenderingIntent_FieldID: jfieldID?

    open static var icHdrRenderingIntent: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrRenderingIntent", fieldType: "I", fieldCache: &icHdrRenderingIntent_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrIlluminant

    private static var icHdrIlluminant_FieldID: jfieldID?

    open static var icHdrIlluminant: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrIlluminant", fieldType: "I", fieldCache: &icHdrIlluminant_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrCreator

    private static var icHdrCreator_FieldID: jfieldID?

    open static var icHdrCreator: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrCreator", fieldType: "I", fieldCache: &icHdrCreator_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icHdrProfileID

    private static var icHdrProfileID_FieldID: jfieldID?

    open static var icHdrProfileID: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icHdrProfileID", fieldType: "I", fieldCache: &icHdrProfileID_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icTagType

    private static var icTagType_FieldID: jfieldID?

    open static var icTagType: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icTagType", fieldType: "I", fieldCache: &icTagType_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icTagReserved

    private static var icTagReserved_FieldID: jfieldID?

    open static var icTagReserved: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icTagReserved", fieldType: "I", fieldCache: &icTagReserved_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icCurveCount

    private static var icCurveCount_FieldID: jfieldID?

    open static var icCurveCount: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icCurveCount", fieldType: "I", fieldCache: &icCurveCount_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icCurveData

    private static var icCurveData_FieldID: jfieldID?

    open static var icCurveData: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icCurveData", fieldType: "I", fieldCache: &icCurveData_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// public static final int java.awt.color.ICC_Profile.icXYZNumberX

    private static var icXYZNumberX_FieldID: jfieldID?

    open static var icXYZNumberX: Int {
        get {
            let __value = JNIField.GetStaticIntField( fieldName: "icXYZNumberX", fieldType: "I", fieldCache: &icXYZNumberX_FieldID, className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass )
            return JNIType.toSwift( type: Int(), from: __value )
        }
    }

    /// private int java.awt.color.ICC_Profile.iccProfileSerializedDataVersion

    /// private transient java.awt.color.ICC_Profile java.awt.color.ICC_Profile.resolvedDeserializedProfile

    /// java.awt.color.ICC_Profile(sun.java2d.cmm.Profile)

    /// java.awt.color.ICC_Profile(sun.java2d.cmm.ProfileDeferralInfo)

    /// protected void java.awt.color.ICC_Profile.finalize()

    private static var finalize_MethodID_1: jmethodID?

    override open func finalize() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "finalize", methodSig: "()V", methodCache: &ICC_Profile.finalize_MethodID_1, args: &__args, locals: &__locals )
    }


    /// public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(java.io.InputStream) throws java.io.IOException

    private static var getInstance_MethodID_2: jmethodID?

    open class func getInstance( arg0: /* java.io.InputStream */ UnclassedObject? ) throws /* java.io.IOException */ -> ICC_Profile! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass, methodName: "getInstance", methodSig: "(Ljava/io/InputStream;)Ljava/awt/color/ICC_Profile;", methodCache: &getInstance_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        if let throwable = JNI.ExceptionCheck() {
            throw /* java.io.IOException */ UnclassedObject( javaObject: throwable )
        }
        return __return != nil ? ICC_Profile( javaObject: __return ) : nil
    }

    open class func getInstance( _ _arg0: /* java.io.InputStream */ UnclassedObject? ) throws /* java.io.IOException */ -> ICC_Profile! {
        return try getInstance( arg0: _arg0 )
    }

    /// public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(java.lang.String) throws java.io.IOException

    private static var getInstance_MethodID_3: jmethodID?

    open class func getInstance( arg0: String? ) throws /* java.io.IOException */ -> ICC_Profile! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass, methodName: "getInstance", methodSig: "(Ljava/lang/String;)Ljava/awt/color/ICC_Profile;", methodCache: &getInstance_MethodID_3, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        if let throwable = JNI.ExceptionCheck() {
            throw /* java.io.IOException */ UnclassedObject( javaObject: throwable )
        }
        return __return != nil ? ICC_Profile( javaObject: __return ) : nil
    }

    open class func getInstance( _ _arg0: String? ) throws /* java.io.IOException */ -> ICC_Profile! {
        return try getInstance( arg0: _arg0 )
    }

    /// public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(int)

    private static var getInstance_MethodID_4: jmethodID?

    open class func getInstance( arg0: Int ) -> ICC_Profile! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass, methodName: "getInstance", methodSig: "(I)Ljava/awt/color/ICC_Profile;", methodCache: &getInstance_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? ICC_Profile( javaObject: __return ) : nil
    }

    open class func getInstance( _ _arg0: Int ) -> ICC_Profile! {
        return getInstance( arg0: _arg0 )
    }

    /// public static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getInstance(byte[])

    private static var getInstance_MethodID_5: jmethodID?

    open class func getInstance( arg0: [Int8]? ) -> ICC_Profile! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/awt/color/ICC_Profile", classCache: &ICC_ProfileJNIClass, methodName: "getInstance", methodSig: "([B)Ljava/awt/color/ICC_Profile;", methodCache: &getInstance_MethodID_5, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? ICC_Profile( javaObject: __return ) : nil
    }

    open class func getInstance( _ _arg0: [Int8]? ) -> ICC_Profile! {
        return getInstance( arg0: _arg0 )
    }

    /// static java.io.File java.awt.color.ICC_Profile.access$000(java.lang.String)

    /// public void java.awt.color.ICC_Profile.write(java.lang.String) throws java.io.IOException

    private static var write_MethodID_6: jmethodID?

    open func write( arg0: String? ) throws /* java.io.IOException */ {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "write", methodSig: "(Ljava/lang/String;)V", methodCache: &ICC_Profile.write_MethodID_6, args: &__args, locals: &__locals )
        if let throwable = JNI.ExceptionCheck() {
            throw /* java.io.IOException */ UnclassedObject( javaObject: throwable )
        }
    }

    open func write( _ _arg0: String? ) throws /* java.io.IOException */ {
        try write( arg0: _arg0 )
    }

    /// public void java.awt.color.ICC_Profile.write(java.io.OutputStream) throws java.io.IOException

    private static var write_MethodID_7: jmethodID?

    open func write( arg0: /* java.io.OutputStream */ UnclassedObject? ) throws /* java.io.IOException */ {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "write", methodSig: "(Ljava/io/OutputStream;)V", methodCache: &ICC_Profile.write_MethodID_7, args: &__args, locals: &__locals )
        if let throwable = JNI.ExceptionCheck() {
            throw /* java.io.IOException */ UnclassedObject( javaObject: throwable )
        }
    }

    open func write( _ _arg0: /* java.io.OutputStream */ UnclassedObject? ) throws /* java.io.IOException */ {
        try write( arg0: _arg0 )
    }

    /// private void java.awt.color.ICC_Profile.readObject(java.io.ObjectInputStream) throws java.io.IOException,java.lang.ClassNotFoundException

    /// private void java.awt.color.ICC_Profile.writeObject(java.io.ObjectOutputStream) throws java.io.IOException

    /// protected java.lang.Object java.awt.color.ICC_Profile.readResolve() throws java.io.ObjectStreamException

    private static var readResolve_MethodID_8: jmethodID?

    open func readResolve() throws /* java.io.ObjectStreamException */ -> java_swift.JavaObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "readResolve", methodSig: "()Ljava/lang/Object;", methodCache: &ICC_Profile.readResolve_MethodID_8, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        if let throwable = JNI.ExceptionCheck() {
            throw /* java.io.ObjectStreamException */ UnclassedObject( javaObject: throwable )
        }
        return __return != nil ? java_swift.JavaObject( javaObject: __return ) : nil
    }


    /// public byte[] java.awt.color.ICC_Profile.getData()

    private static var getData_MethodID_9: jmethodID?

    open func getData() -> [Int8]! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getData", methodSig: "()[B", methodCache: &ICC_Profile.getData_MethodID_9, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: [Int8](), from: __return )
    }


    /// public byte[] java.awt.color.ICC_Profile.getData(int)

    private static var getData_MethodID_10: jmethodID?

    open func getData( arg0: Int ) -> [Int8]! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getData", methodSig: "(I)[B", methodCache: &ICC_Profile.getData_MethodID_10, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: [Int8](), from: __return )
    }

    open func getData( _ _arg0: Int ) -> [Int8]! {
        return getData( arg0: _arg0 )
    }

    /// static byte[] java.awt.color.ICC_Profile.getData(sun.java2d.cmm.Profile,int)

    /// private static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getStandardProfile(java.lang.String)

    /// static byte[] java.awt.color.ICC_Profile.getProfileDataFromStream(java.io.InputStream) throws java.io.IOException

    /// static java.awt.color.ICC_Profile java.awt.color.ICC_Profile.getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)

    /// void java.awt.color.ICC_Profile.activateDeferredProfile() throws java.awt.color.ProfileDataException

    /// public int java.awt.color.ICC_Profile.getMajorVersion()

    private static var getMajorVersion_MethodID_11: jmethodID?

    open func getMajorVersion() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getMajorVersion", methodSig: "()I", methodCache: &ICC_Profile.getMajorVersion_MethodID_11, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Int(), from: __return )
    }


    /// public int java.awt.color.ICC_Profile.getMinorVersion()

    private static var getMinorVersion_MethodID_12: jmethodID?

    open func getMinorVersion() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getMinorVersion", methodSig: "()I", methodCache: &ICC_Profile.getMinorVersion_MethodID_12, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Int(), from: __return )
    }


    /// public int java.awt.color.ICC_Profile.getProfileClass()

    private static var getProfileClass_MethodID_13: jmethodID?

    open func getProfileClass() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getProfileClass", methodSig: "()I", methodCache: &ICC_Profile.getProfileClass_MethodID_13, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Int(), from: __return )
    }


    /// public int java.awt.color.ICC_Profile.getColorSpaceType()

    private static var getColorSpaceType_MethodID_14: jmethodID?

    open func getColorSpaceType() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getColorSpaceType", methodSig: "()I", methodCache: &ICC_Profile.getColorSpaceType_MethodID_14, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Int(), from: __return )
    }


    /// static int java.awt.color.ICC_Profile.getColorSpaceType(sun.java2d.cmm.Profile)

    /// static int java.awt.color.ICC_Profile.getPCSType(sun.java2d.cmm.Profile)

    /// public int java.awt.color.ICC_Profile.getPCSType()

    private static var getPCSType_MethodID_15: jmethodID?

    open func getPCSType() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getPCSType", methodSig: "()I", methodCache: &ICC_Profile.getPCSType_MethodID_15, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Int(), from: __return )
    }


    /// public void java.awt.color.ICC_Profile.setData(int,byte[])

    private static var setData_MethodID_16: jmethodID?

    open func setData( arg0: Int, arg1: [Int8]? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: arg0, locals: &__locals )
        __args[1] = JNIType.toJava( value: arg1, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "setData", methodSig: "(I[B)V", methodCache: &ICC_Profile.setData_MethodID_16, args: &__args, locals: &__locals )
    }

    open func setData( _ _arg0: Int, _ _arg1: [Int8]? ) {
        setData( arg0: _arg0, arg1: _arg1 )
    }

    /// void java.awt.color.ICC_Profile.setRenderingIntent(int)

    /// int java.awt.color.ICC_Profile.getRenderingIntent()

    /// float[] java.awt.color.ICC_Profile.getMediaWhitePoint()

    /// float[] java.awt.color.ICC_Profile.getXYZTag(int)

    /// float java.awt.color.ICC_Profile.getGamma(int)

    /// short[] java.awt.color.ICC_Profile.getTRC(int)

    /// static int java.awt.color.ICC_Profile.iccCStoJCS(int)

    /// static int java.awt.color.ICC_Profile.intFromBigEndian(byte[],int)

    /// static void java.awt.color.ICC_Profile.intToBigEndian(int,byte[],int)

    /// static short java.awt.color.ICC_Profile.shortFromBigEndian(byte[],int)

    /// static void java.awt.color.ICC_Profile.shortToBigEndian(short,byte[],int)

    /// private static java.io.File java.awt.color.ICC_Profile.getProfileFile(java.lang.String)

    /// private static java.io.File java.awt.color.ICC_Profile.getStandardProfileFile(java.lang.String)

    /// private static boolean java.awt.color.ICC_Profile.isChildOf(java.io.File,java.lang.String)

    /// private static boolean java.awt.color.ICC_Profile.standardProfileExists(java.lang.String)

    /// public int java.awt.color.ICC_Profile.getNumComponents()

    private static var getNumComponents_MethodID_17: jmethodID?

    open func getNumComponents() -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "getNumComponents", methodSig: "()I", methodCache: &ICC_Profile.getNumComponents_MethodID_17, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: Int(), from: __return )
    }


}

