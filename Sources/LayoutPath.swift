
import java_swift
import java_lang

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:35:06 GMT 2016 ///

/// class java.awt.font.LayoutPath ///

open class LayoutPath: java_lang.JavaObject {

    public convenience init?( casting object: java_lang.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.awt.font.LayoutPath", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var LayoutPathJNIClass: jclass?

    /// public java.awt.font.LayoutPath()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/font/LayoutPath", classCache: &LayoutPath.LayoutPathJNIClass, methodSig: "()V", methodCache: &LayoutPath.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public abstract boolean java.awt.font.LayoutPath.pointToPath(java.awt.geom.Point2D,java.awt.geom.Point2D)

    private static var pointToPath_MethodID_2: jmethodID?

    open func pointToPath( arg0: Point2D?, arg1: Point2D? ) -> Bool {
        var __args = [jvalue]( repeating: jvalue(), count: 2 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "pointToPath", methodSig: "(Ljava/awt/geom/Point2D;Ljava/awt/geom/Point2D;)Z", methodCache: &LayoutPath.pointToPath_MethodID_2, args: &__args, locals: &__locals )
        return JNIType.decode( type: Bool(), from: __return )
    }

    open func pointToPath( _ _arg0: Point2D?, _ _arg1: Point2D? ) -> Bool {
        return pointToPath( arg0: _arg0, arg1: _arg1 )
    }

    /// public abstract void java.awt.font.LayoutPath.pathToPoint(java.awt.geom.Point2D,boolean,java.awt.geom.Point2D)

    private static var pathToPoint_MethodID_3: jmethodID?

    open func pathToPoint( arg0: Point2D?, arg1: Bool, arg2: Point2D? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 3 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "pathToPoint", methodSig: "(Ljava/awt/geom/Point2D;ZLjava/awt/geom/Point2D;)V", methodCache: &LayoutPath.pathToPoint_MethodID_3, args: &__args, locals: &__locals )
    }

    open func pathToPoint( _ _arg0: Point2D?, _ _arg1: Bool, _ _arg2: Point2D? ) {
        pathToPoint( arg0: _arg0, arg1: _arg1, arg2: _arg2 )
    }

}
