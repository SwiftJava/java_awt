
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// class java.awt.event.ComponentAdapter ///

open class ComponentAdapter: java_swift.JavaObject, ComponentListener {

    public convenience init?( casting object: java_swift.JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var ComponentAdapterJNIClass: jclass?

    /// public java.awt.event.ComponentAdapter()

    private static var new_MethodID_1: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __object = JNIMethod.NewObject( className: "java/awt/event/ComponentAdapter", classCache: &ComponentAdapter.ComponentAdapterJNIClass, methodSig: "()V", methodCache: &ComponentAdapter.new_MethodID_1, args: &__args, locals: &__locals )
        self.init( javaObject: __object )
        JNI.DeleteLocalRef( __object )
    }

    /// public void java.awt.event.ComponentAdapter.componentResized(java.awt.event.ComponentEvent)

    private static var componentResized_MethodID_2: jmethodID?

    open func componentResized( e: ComponentEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "componentResized", methodSig: "(Ljava/awt/event/ComponentEvent;)V", methodCache: &ComponentAdapter.componentResized_MethodID_2, args: &__args, locals: &__locals )
    }

    open func componentResized( _ _e: ComponentEvent? ) {
        componentResized( e: _e )
    }

    /// public void java.awt.event.ComponentAdapter.componentMoved(java.awt.event.ComponentEvent)

    private static var componentMoved_MethodID_3: jmethodID?

    open func componentMoved( e: ComponentEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "componentMoved", methodSig: "(Ljava/awt/event/ComponentEvent;)V", methodCache: &ComponentAdapter.componentMoved_MethodID_3, args: &__args, locals: &__locals )
    }

    open func componentMoved( _ _e: ComponentEvent? ) {
        componentMoved( e: _e )
    }

    /// public void java.awt.event.ComponentAdapter.componentShown(java.awt.event.ComponentEvent)

    private static var componentShown_MethodID_4: jmethodID?

    open func componentShown( e: ComponentEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "componentShown", methodSig: "(Ljava/awt/event/ComponentEvent;)V", methodCache: &ComponentAdapter.componentShown_MethodID_4, args: &__args, locals: &__locals )
    }

    open func componentShown( _ _e: ComponentEvent? ) {
        componentShown( e: _e )
    }

    /// public void java.awt.event.ComponentAdapter.componentHidden(java.awt.event.ComponentEvent)

    private static var componentHidden_MethodID_5: jmethodID?

    open func componentHidden( e: ComponentEvent? ) {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        JNIMethod.CallVoidMethod( object: javaObject, methodName: "componentHidden", methodSig: "(Ljava/awt/event/ComponentEvent;)V", methodCache: &ComponentAdapter.componentHidden_MethodID_5, args: &__args, locals: &__locals )
    }

    open func componentHidden( _ _e: ComponentEvent? ) {
        componentHidden( e: _e )
    }

}

private typealias ComponentAdapter_componentResized_0_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> ()

private func ComponentAdapter_componentResized_0( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ e: jobject? ) -> () {
    JNI.inNative = true;
    ComponentAdapterLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).componentResized( e: e != nil ? ComponentEvent( javaObject: e ) : nil )
    JNI.inNative = false;
}

private typealias ComponentAdapter_componentMoved_1_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> ()

private func ComponentAdapter_componentMoved_1( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ e: jobject? ) -> () {
    JNI.inNative = true;
    ComponentAdapterLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).componentMoved( e: e != nil ? ComponentEvent( javaObject: e ) : nil )
    JNI.inNative = false;
}

private typealias ComponentAdapter_componentShown_2_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> ()

private func ComponentAdapter_componentShown_2( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ e: jobject? ) -> () {
    JNI.inNative = true;
    ComponentAdapterLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).componentShown( e: e != nil ? ComponentEvent( javaObject: e ) : nil )
    JNI.inNative = false;
}

private typealias ComponentAdapter_componentHidden_3_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> ()

private func ComponentAdapter_componentHidden_3( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ e: jobject? ) -> () {
    JNI.inNative = true;
    ComponentAdapterLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).componentHidden( e: e != nil ? ComponentEvent( javaObject: e ) : nil )
    JNI.inNative = false;
}

private typealias ComponentAdapter_equals_7_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong, _: jobject? ) -> jboolean

private func ComponentAdapter_equals_7( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong, _ arg0: jobject? ) -> jboolean {
    JNI.inNative = true;
    let __return = ComponentAdapterLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).equals( arg0: arg0 != nil ? java_swift.JavaObject( javaObject: arg0 ) : nil )
    JNI.inNative = false;
    var locals = [jobject]()
    return JNI.check( JNIType.toJava( value: __return, locals: &locals ).z, &locals, removeLast: true )
}

private typealias ComponentAdapter_toString_8_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong ) -> jobject?

private func ComponentAdapter_toString_8( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong ) -> jobject? {
    JNI.inNative = true;
    let __return = ComponentAdapterLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).toString( )
    JNI.inNative = false;
    var locals = [jobject]()
    return JNI.check( JNIType.toJava( value: __return, locals: &locals ).l, &locals, removeLast: true )
}

private typealias ComponentAdapter_hashCode_9_type = @convention(c) ( _: UnsafeMutablePointer<JNIEnv?>, _: jobject?, _: jlong ) -> jint

private func ComponentAdapter_hashCode_9( _ __env: UnsafeMutablePointer<JNIEnv?>, _ __this: jobject?, _ __swiftObject: jlong ) -> jint {
    JNI.inNative = true;
    let __return = ComponentAdapterLocal_.swiftObject( jniEnv: __env, javaObject: __this, swiftObject: __swiftObject ).hashCode( )
    JNI.inNative = false;
    var locals = [jobject]()
    return JNI.check( JNIType.toJava( value: __return, locals: &locals ).i, &locals, removeLast: true )
}

fileprivate class ComponentAdapterLocal_: JNIObjectProxy<ComponentAdapter> {

    fileprivate static let _proxyClass: jclass = {
        var natives = [JNINativeMethod]()

        let ComponentAdapter_componentResized_0_thunk: ComponentAdapter_componentResized_0_type = ComponentAdapter_componentResized_0
        natives.append( JNINativeMethod( name: strdup("__componentResized"), signature: strdup("(JLjava/awt/event/ComponentEvent;)V"), fnPtr: unsafeBitCast( ComponentAdapter_componentResized_0_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ComponentAdapter_componentMoved_1_thunk: ComponentAdapter_componentMoved_1_type = ComponentAdapter_componentMoved_1
        natives.append( JNINativeMethod( name: strdup("__componentMoved"), signature: strdup("(JLjava/awt/event/ComponentEvent;)V"), fnPtr: unsafeBitCast( ComponentAdapter_componentMoved_1_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ComponentAdapter_componentShown_2_thunk: ComponentAdapter_componentShown_2_type = ComponentAdapter_componentShown_2
        natives.append( JNINativeMethod( name: strdup("__componentShown"), signature: strdup("(JLjava/awt/event/ComponentEvent;)V"), fnPtr: unsafeBitCast( ComponentAdapter_componentShown_2_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ComponentAdapter_componentHidden_3_thunk: ComponentAdapter_componentHidden_3_type = ComponentAdapter_componentHidden_3
        natives.append( JNINativeMethod( name: strdup("__componentHidden"), signature: strdup("(JLjava/awt/event/ComponentEvent;)V"), fnPtr: unsafeBitCast( ComponentAdapter_componentHidden_3_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ComponentAdapter_equals_7_thunk: ComponentAdapter_equals_7_type = ComponentAdapter_equals_7
        natives.append( JNINativeMethod( name: strdup("__equals"), signature: strdup("(JLjava/lang/Object;)Z"), fnPtr: unsafeBitCast( ComponentAdapter_equals_7_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ComponentAdapter_toString_8_thunk: ComponentAdapter_toString_8_type = ComponentAdapter_toString_8
        natives.append( JNINativeMethod( name: strdup("__toString"), signature: strdup("(J)Ljava/lang/String;"), fnPtr: unsafeBitCast( ComponentAdapter_toString_8_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let ComponentAdapter_hashCode_9_thunk: ComponentAdapter_hashCode_9_type = ComponentAdapter_hashCode_9
        natives.append( JNINativeMethod( name: strdup("__hashCode"), signature: strdup("(J)I"), fnPtr: unsafeBitCast( ComponentAdapter_hashCode_9_thunk, to: UnsafeMutableRawPointer.self ) ) )

        natives.append( JNINativeMethod( name: strdup("__finalize"), signature: strdup("(J)V"), fnPtr: unsafeBitCast( JNIReleasableProxy__finalize_thunk, to: UnsafeMutableRawPointer.self ) ) )

        let clazz = JNI.FindClass( proxyClassName() )
        withUnsafePointer(to: &natives[0]) {
            nativesPtr in
            if JNI.api.RegisterNatives( JNI.env, clazz, nativesPtr, jint(natives.count) ) != jint(JNI_OK) {
                JNI.report( "Unable to register java natives" )
            }
        }

        defer { JNI.DeleteLocalRef( clazz ) }
        return JNI.api.NewGlobalRef( JNI.env, clazz )!
    }()

    override open class func proxyClassName() -> String { return "org/swiftjava/java_awt/ComponentAdapterProxy" }
    override open class func proxyClass() -> jclass? { return _proxyClass }

}

open class ComponentAdapterBase: ComponentAdapter {

    private static var ComponentAdapterBaseJNIClass: jclass? = ComponentAdapterLocal_.proxyClass()

    private lazy var __local: ComponentAdapterLocal_? = ComponentAdapterLocal_( owned: self, proto: self )

    override open func clearLocal() {
        __local = nil
    }

    open func inherit( _ parent: JNIObjectProtocol ) {
        parent.withJavaObject {
            self.javaObject = $0
            self.__local?.takeOwnership(javaObject: $0)
        }
    }

    /// public java.awt.event.ComponentAdapter()

    private static var new_MethodID_6: jmethodID?

    public convenience init() {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()

        self.init( javaObject: nil )
        __args[0] = __local!.swiftValue()

        let __object = JNIMethod.NewObject( className: "org/swiftjava/java_awt/ComponentAdapterProxy", classCache: &ComponentAdapterBase.ComponentAdapterBaseJNIClass, methodSig: "(J)V", methodCache: &ComponentAdapterBase.new_MethodID_6, args: &__args, locals: &__locals )
        self.javaObject = __object
        JNI.DeleteLocalRef( __object )
    }

}
