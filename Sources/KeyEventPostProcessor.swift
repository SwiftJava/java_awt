
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.awt.KeyEventPostProcessor ///

public protocol KeyEventPostProcessor: JavaProtocol {

    /// public abstract boolean java.awt.KeyEventPostProcessor.postProcessKeyEvent(java.awt.event.KeyEvent)

    func postProcessKeyEvent( e: KeyEvent? ) -> Bool

}


open class KeyEventPostProcessorForward: JNIObjectForward, KeyEventPostProcessor {

    private static var KeyEventPostProcessorJNIClass: jclass?

    /// public abstract boolean java.awt.KeyEventPostProcessor.postProcessKeyEvent(java.awt.event.KeyEvent)

    private static var postProcessKeyEvent_MethodID_2: jmethodID?

    open func postProcessKeyEvent( e: KeyEvent? ) -> Bool {
        var __locals = [jobject]()
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        __args[0] = JNIType.toJava( value: e, locals: &__locals )
        let __return = JNIMethod.CallBooleanMethod( object: javaObject, methodName: "postProcessKeyEvent", methodSig: "(Ljava/awt/event/KeyEvent;)Z", methodCache: &KeyEventPostProcessorForward.postProcessKeyEvent_MethodID_2, args: &__args, locals: &__locals )
        return __return != jboolean(JNI_FALSE)
    }

    open func postProcessKeyEvent( _ _e: KeyEvent? ) -> Bool {
        return postProcessKeyEvent( e: _e )
    }

}

